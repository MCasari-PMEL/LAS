	public static int deleteCatalog(int catalogId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalog", new int[]{catalogId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogId;
	}

	public static int deleteCatalogDataset(int catalogDatasetId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalog_dataset", new int[]{catalogDatasetId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogDatasetId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogDatasetId;
	}

	public static int deleteCatalogProperty(int catalogPropertyId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalog_property", new int[]{catalogPropertyId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogPropertyId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogPropertyId;
	}

	public static int deleteCatalogService(int catalogServiceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalog_service", new int[]{catalogServiceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogServiceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogServiceId;
	}

	public static int deleteCatalogXlink(int catalogXlinkId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalog_xlink", new int[]{catalogXlinkId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogXlinkId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogXlinkId;
	}

	public static int deleteCatalogref(int catalogrefId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalogref", new int[]{catalogrefId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogrefId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogrefId;
	}

	public static int deleteCatalogrefDocumentation(int catalogrefDocumentationId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalogref_documentation", new int[]{catalogrefDocumentationId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogrefDocumentationId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogrefDocumentationId;
	}

	public static int deleteCatalogrefDocumentationNamespace(int catalogrefDocumentationNamespaceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalogref_documentation_namespace", new int[]{catalogrefDocumentationNamespaceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogrefDocumentationNamespaceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogrefDocumentationNamespaceId;
	}

	public static int deleteCatalogrefDocumentationXlink(int catalogrefDocumentationXlinkId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalogref_documentation_xlink", new int[]{catalogrefDocumentationXlinkId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogrefDocumentationXlinkId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogrefDocumentationXlinkId;
	}

	public static int deleteCatalogrefXlink(int catalogrefXlinkId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_catalogref_xlink", new int[]{catalogrefXlinkId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			catalogrefXlinkId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return catalogrefXlinkId;
	}

	public static int deleteDataset(int datasetId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset", new int[]{datasetId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetId;
	}

	public static int deleteDatasetAccess(int datasetAccessId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_access", new int[]{datasetAccessId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetAccessId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetAccessId;
	}

	public static int deleteDatasetAccessDatasize(int datasetAccessDatasizeId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_access_datasize", new int[]{datasetAccessDatasizeId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetAccessDatasizeId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetAccessDatasizeId;
	}

	public static int deleteDatasetCatalogref(int datasetCatalogrefId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_catalogref", new int[]{datasetCatalogrefId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetCatalogrefId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetCatalogrefId;
	}

	public static int deleteDatasetDataset(int datasetDatasetId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_dataset", new int[]{datasetDatasetId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetDatasetId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetDatasetId;
	}

	public static int deleteDatasetNcml(int datasetNcmlId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_ncml", new int[]{datasetNcmlId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetNcmlId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetNcmlId;
	}

	public static int deleteDatasetProperty(int datasetPropertyId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_property", new int[]{datasetPropertyId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetPropertyId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetPropertyId;
	}

	public static int deleteDatasetService(int datasetServiceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_service", new int[]{datasetServiceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetServiceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetServiceId;
	}

	public static int deleteDatasetTmg(int datasetTmgId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_dataset_tmg", new int[]{datasetTmgId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			datasetTmgId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return datasetTmgId;
	}

	public static int deleteMetadata(int metadataId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_metadata", new int[]{metadataId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			metadataId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return metadataId;
	}

	public static int deleteMetadataNamespace(int metadataNamespaceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_metadata_namespace", new int[]{metadataNamespaceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			metadataNamespaceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return metadataNamespaceId;
	}

	public static int deleteMetadataTmg(int metadataTmgId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_metadata_tmg", new int[]{metadataTmgId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			metadataTmgId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return metadataTmgId;
	}

	public static int deleteMetadataXlink(int metadataXlinkId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_metadata_xlink", new int[]{metadataXlinkId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			metadataXlinkId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return metadataXlinkId;
	}

	public static int deleteService(int serviceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_service", new int[]{serviceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			serviceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return serviceId;
	}

	public static int deleteServiceDatasetroot(int serviceDatasetrootId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_service_datasetroot", new int[]{serviceDatasetrootId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			serviceDatasetrootId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return serviceDatasetrootId;
	}

	public static int deleteServiceProperty(int servicePropertyId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_service_property", new int[]{servicePropertyId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			servicePropertyId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return servicePropertyId;
	}

	public static int deleteServiceService(int serviceServiceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_service_service", new int[]{serviceServiceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			serviceServiceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return serviceServiceId;
	}

	public static int deleteTmg(int tmgId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg", new int[]{tmgId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgId;
	}

	public static int deleteTmgAuthority(int tmgAuthorityId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_authority", new int[]{tmgAuthorityId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgAuthorityId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgAuthorityId;
	}

	public static int deleteTmgContributor(int tmgContributorId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_contributor", new int[]{tmgContributorId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgContributorId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgContributorId;
	}

	public static int deleteTmgCreator(int tmgCreatorId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_creator", new int[]{tmgCreatorId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgCreatorId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgCreatorId;
	}

	public static int deleteTmgCreatorContact(int tmgCreatorContactId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_creator_contact", new int[]{tmgCreatorContactId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgCreatorContactId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgCreatorContactId;
	}

	public static int deleteTmgCreatorName(int tmgCreatorNameId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_creator_name", new int[]{tmgCreatorNameId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgCreatorNameId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgCreatorNameId;
	}

	public static int deleteTmgDataformat(int tmgDataformatId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_dataformat", new int[]{tmgDataformatId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDataformatId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDataformatId;
	}

	public static int deleteTmgDatasize(int tmgDatasizeId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_datasize", new int[]{tmgDatasizeId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDatasizeId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDatasizeId;
	}

	public static int deleteTmgDatatype(int tmgDatatypeId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_datatype", new int[]{tmgDatatypeId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDatatypeId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDatatypeId;
	}

	public static int deleteTmgDate(int tmgDateId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_date", new int[]{tmgDateId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDateId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDateId;
	}

	public static int deleteTmgDocumentation(int tmgDocumentationId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_documentation", new int[]{tmgDocumentationId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDocumentationId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDocumentationId;
	}

	public static int deleteTmgDocumentationNamespace(int tmgDocumentationNamespaceId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_documentation_namespace", new int[]{tmgDocumentationNamespaceId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDocumentationNamespaceId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDocumentationNamespaceId;
	}

	public static int deleteTmgDocumentationXlink(int tmgDocumentationXlinkId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_documentation_xlink", new int[]{tmgDocumentationXlinkId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgDocumentationXlinkId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgDocumentationXlinkId;
	}

	public static int deleteTmgGeospatialcoverage(int tmgGeospatialcoverageId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_geospatialcoverage", new int[]{tmgGeospatialcoverageId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgGeospatialcoverageId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgGeospatialcoverageId;
	}

	public static int deleteTmgGeospatialcoverageEastwest(int tmgGeospatialcoverageEastwestId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_geospatialcoverage_eastwest", new int[]{tmgGeospatialcoverageEastwestId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgGeospatialcoverageEastwestId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgGeospatialcoverageEastwestId;
	}

	public static int deleteTmgGeospatialcoverageName(int tmgGeospatialcoverageNameId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_geospatialcoverage_name", new int[]{tmgGeospatialcoverageNameId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgGeospatialcoverageNameId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgGeospatialcoverageNameId;
	}

	public static int deleteTmgGeospatialcoverageNorthsouth(int tmgGeospatialcoverageNorthsouthId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_geospatialcoverage_northsouth", new int[]{tmgGeospatialcoverageNorthsouthId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgGeospatialcoverageNorthsouthId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgGeospatialcoverageNorthsouthId;
	}

	public static int deleteTmgGeospatialcoverageUpdown(int tmgGeospatialcoverageUpdownId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_geospatialcoverage_updown", new int[]{tmgGeospatialcoverageUpdownId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgGeospatialcoverageUpdownId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgGeospatialcoverageUpdownId;
	}

	public static int deleteTmgKeyword(int tmgKeywordId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_keyword", new int[]{tmgKeywordId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgKeywordId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgKeywordId;
	}

	public static int deleteTmgMetadata(int tmgMetadataId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_metadata", new int[]{tmgMetadataId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgMetadataId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgMetadataId;
	}

	public static int deleteTmgProject(int tmgProjectId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_project", new int[]{tmgProjectId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgProjectId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgProjectId;
	}

	public static int deleteTmgProperty(int tmgPropertyId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_property", new int[]{tmgPropertyId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgPropertyId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgPropertyId;
	}

	public static int deleteTmgPublisher(int tmgPublisherId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_publisher", new int[]{tmgPublisherId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgPublisherId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgPublisherId;
	}

	public static int deleteTmgPublisherContact(int tmgPublisherContactId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_publisher_contact", new int[]{tmgPublisherContactId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgPublisherContactId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgPublisherContactId;
	}

	public static int deleteTmgPublisherName(int tmgPublisherNameId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_publisher_name", new int[]{tmgPublisherNameId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgPublisherNameId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgPublisherNameId;
	}

	public static int deleteTmgServicename(int tmgServicenameId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_servicename", new int[]{tmgServicenameId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgServicenameId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgServicenameId;
	}

	public static int deleteTmgTimecoverage(int tmgTimecoverageId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_timecoverage", new int[]{tmgTimecoverageId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgTimecoverageId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgTimecoverageId;
	}

	public static int deleteTmgTimecoverageDuration(int tmgTimecoverageDurationId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_timecoverage_duration", new int[]{tmgTimecoverageDurationId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgTimecoverageDurationId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgTimecoverageDurationId;
	}

	public static int deleteTmgTimecoverageEnd(int tmgTimecoverageEndId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_timecoverage_end", new int[]{tmgTimecoverageEndId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgTimecoverageEndId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgTimecoverageEndId;
	}

	public static int deleteTmgTimecoverageResolution(int tmgTimecoverageResolutionId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_timecoverage_resolution", new int[]{tmgTimecoverageResolutionId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgTimecoverageResolutionId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgTimecoverageResolutionId;
	}

	public static int deleteTmgTimecoverageStart(int tmgTimecoverageStartId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_timecoverage_start", new int[]{tmgTimecoverageStartId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgTimecoverageStartId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgTimecoverageStartId;
	}

	public static int deleteTmgVariables(int tmgVariablesId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_variables", new int[]{tmgVariablesId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgVariablesId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgVariablesId;
	}

	public static int deleteTmgVariablesVariable(int tmgVariablesVariableId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_variables_variable", new int[]{tmgVariablesVariableId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgVariablesVariableId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgVariablesVariableId;
	}

	public static int deleteTmgVariablesVariablemap(int tmgVariablesVariablemapId) throws Exception{

		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			ps = setPreparedStatement("delete_tmg_variables_variablemap", new int[]{tmgVariablesVariablemapId});

			log.debug("About to send: {} to the database.", ps.toString());
			rs = ps.executeQuery();
			rs.next();
			tmgVariablesVariablemapId = rs.getInt(1);
		}
		catch (SQLException e) {
			log.error("Caching: Could not access the database/cache. {}", e);
			throw new Exception("SQLException: " + e.getMessage());
		} finally {
			try {
			ps.close();
//				rs.close();
			}
			catch (SQLException e) {
				log.error("Cache read: Could not close the prepared statement. {}", e);
			}
		}
		return tmgVariablesVariablemapId;
	}

