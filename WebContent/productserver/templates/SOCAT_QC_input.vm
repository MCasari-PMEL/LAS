<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<!-- LAS SERVER OK -->

	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
		<title>Enter QC for $las_request.getProperty("qc", "expocode") -- $las_config.getTitle()</title>
		<script language="JavaScript" src="JavaScript/components/xmldom.js"></script>
		<script language="JavaScript" src="JavaScript/components/LASRequest.js"></script>
		<script language="JavaScript">
			/**
			 * check if a string fits the expocode format
			 * @param expocode
			 * 		string to check
			 * @returns
			 * 		true if it fits the expocode format;
			 * 		otherwise false
			 */
			function couldBeExpo(expocode) {
				var len = expocode.length;
				var validchars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-";
				if ( (len < 12) || (len > 15) ) {
					return false;
				}
				for (var k = 0; k < len; k++) {
					if ( validchars.indexOf(expocode.charAt(k)) < 0 ) {
						return false;
					}
				}
				return true;
			}

			/**
			 * Generate and assign the complete QC comment 
			 * from the selected values and additional comments.
			 */
			function assignComment() {
				var comment = "";

				if ( document.getElementById("fco2two").checked ) {
					comment += "Accuracy of calculated fCO2w (at SST) less than 2 uatm.  ";
				}
				else if ( document.getElementById("fco2five").checked ) {
					comment += "Accuracy of calculated fCO2w (at SST) less than 5 uatm.  ";
				}
				else if ( document.getElementById("fco2ten").checked ) {
					comment += "Accuracy of calculated fCO2w (at SST) less than 10 uatm.  ";
				}
				else if ( document.getElementById("fco2bad").checked ) {
					comment += "Accuracy of calculated fCO2w (at SST) more than 10 uatm.  ";
				}

				if ( document.getElementById("soptrue").checked ) {
					comment += "Followed standard methods/SOP.  ";
				}
				else if ( document.getElementById("sopfalse").checked ) {
					comment += "Did not follow standard methods/SOP.  ";
				}

				if ( document.getElementById("metacomplete").checked ) {
					comment += "Metadata complete.  ";
				}
				else if ( document.getElementById("metalacking").checked ) {
					comment += "Metadata not complete.  ";
				}

				if ( document.getElementById("datagood").checked ) {
					comment += "Data quality acceptable.  ";
				}
				else if ( document.getElementById("databad").checked ) {
					comment += "Significant amount of unacceptable-quality data.  ";
				}

				if ( document.getElementById("crossfound").checked ) {
					comment += "High-quality cross-over with " + document.getElementById("crossexpo").value.trim() + ".  ";
				}
				else if ( document.getElementById("crossnone").checked ) {
					comment += "No high-quality cross-overs found at the time of this QC.  ";
				}

				var userComment = document.getElementById("addlcomment").value.trim();
				// listing each of these problems individually - maybe one day we can fix some or all
				userComment = userComment.replace(/\'/g,"")
				userComment = userComment.replace(/\"/g,"");
				userComment = userComment.replace(/</g," less than ")
				userComment = userComment.replace(/>/g," more than ");
				userComment = userComment.replace(/%/g," percent")
				userComment = userComment.replace(/&/g," and ");
				comment += userComment;

				document.getElementById("comment").value = comment.trim();
			}

			/**
			 * Check selected comments to see if they are sufficient for the given flag
			 * @param flag
			 * 		QC flag to be assigned
			 * @returns
			 * 		true if comments are sufficient for the flag;
			 * 		otherwise false.
			 */
			function checkFlag(flag) {
				var fco2val = 16;
				if ( document.getElementById("fco2two").checked ) {
					fco2val = 1;
				}
				else if ( document.getElementById("fco2five").checked ) {
					fco2val = 4;
				}
				else if ( document.getElementById("fco2ten").checked ) {
					fco2val = 9;
				}
				switch( flag ) {
				case "A":
				case "B":
					if ( fco2val > 2 ) {
						window.alert("Accuracy of calculated aqueous fCO2 (at SST) must be less than 2 &mu;atm for QC flag A and B");
						return false;
					}
					break;
				case "C":
				case "D":
					if ( fco2val > 5 ) {
						window.alert("Accuracy of calculated aqueous fCO2 (at SST) must be less than 5 &mu;atm for QC flag C and D");
						return false;
					}
					break;
				case "E":
					if ( fco2val > 10 ) {
						window.alert("Accuracy of calculated aqueous fCO2 (at SST) must be less than 10 &mu;atm for QC flag E");
						return false;
					}
					break;
				default:
					break;
				}

				switch( flag ) {
				case "A":
				case "B":
				case "C":
					if ( ! document.getElementById("soptrue").checked ) {
						window.alert("Approved methods/SOP criteria must be followed for QC flag A, B, and C");
						return false;
					}
					break;
				default:
					break;
				}

				switch( flag ) {
				case "A":
				case "B":
				case "C":
				case "E":
					if ( ! document.getElementById("metacomplete").checked ) {
						window.alert("Metadata documentation must be complete for QC flag A, B, C, and E");
						return false;
					}
					break;
				default:
					break;
				}

				switch( flag ) {
				case "A":
				case "B":
				case "C":
				case "D":
				case "E":
					if ( ! document.getElementById("datagood").checked ) {
						window.alert("Data quality must be acceptable for QC flag A, B, C, D, and E");
						return false;
					}
					break;
				default:
					break;
				}

				switch( flag ) {
				case "A":
					if ( ! document.getElementById("crossfound").checked ) {
						window.alert("A high-quality cross-over must be specified for QC flag A");
						return false;
					}
					// fallthru
				default:
					if ( document.getElementById("crossfound").checked &&
						 ! couldBeExpo(document.getElementById("crossexpo").value.trim()) ) {
						window.alert("The dataset expocode for the high-quality cross-over is not valid");
						return false;
					}
					break;
				}

				return true;
			}

			/**
			 * Submit the QC flag.  Checks the selected comments are sufficient 
			 * for the selected flag then makes the LAS request.
			 */
			function submitQC() {
				var reviewer = "$user_name";
				var flag = document.getElementById("flag").value;
				if ( ! checkFlag(flag) ) {
					return;
				}
				var region_id = document.getElementById("region").value;
				var comment = document.getElementById("comment").value.trim();
				if ( comment.length < 8 ) {
					window.alert("Please enter a valid comment");
					return;
				}

				var Req = new LASRequest('$las_request.toJavaScriptSafeString()');
				Req.setOperation("SOCAT_QC_submit");
				Req.setProperty("qc","cruise_ID","$las_request.getProperty('qc', 'cruise_ID')");
				Req.setProperty("qc","region_ID",region_id);
				Req.setProperty("qc","flag",flag);
				Req.setProperty("qc","comment",comment);
				Req.setProperty("qc","reviewer",reviewer);

				var reqXmlText = Req.getXMLText();
				reqXmlText = escape(reqXmlText);
				document.location="ProductServer.do?xml=" + reqXmlText;
			}

			/**
			 * Setup of the document after loading.  Currently just
			 * adds event listeners for the elements in the page.
			 */
			function setup() {
				var cmtids = [ "fco2two", "fco2five", "fco2ten", "fco2bad", "fco2nocomment", 
				               "soptrue", "sopfalse", "sopnocomment", 
				               "metacomplete", "metalacking", "metanocomment",
				               "datagood", "databad", "datanocomment",
				               "crossfound", "crossexpo", "crossnone", "crossnocomment" ];
				var numids = cmtids.length;
				for (var k = 0; k < numids; k++) {
					document.getElementById(cmtids[k]).addEventListener("change", assignComment);
				}
				document.getElementById("addlcomment").addEventListener("input", assignComment);
				document.getElementById("cancelqc").addEventListener("click", window.close);
				document.getElementById("submitqc").addEventListener("click", submitQC);
			}

			// Run setup after loading the document
			window.addEventListener("load", setup);
		</script>

		<style>
			h4.toplabel { margin-bottom: 0.0em; }
			div.value { margin-top: 0.0em; margin-bottom: 2.0em; }
			div.radiolabel { margin-left: 1.0em; margin-top: 1.0em; margin-bottom: 0.0em; }
			div.radiovalue { margin-left: 2.0em; margin-top: 0.25em; margin-bottom: 0.25em; }
			div.buttonpanel { margin-top: 1.0em; margin-bottom: 1.0em; }
			input.checkbox { margin-right: 0.25em; }
			input.radio { margin-right: 0.25em; }
			input.text { margin-left: 0.25em; }
			select { margin-left: 0.25em; }
		</style>

	</head>

	<body>
		<div style="position:absolute;">

			<h3>QC for $las_request.getProperty("qc", "expocode")</h3>
			<h4>Reviewer: $user_name</h4>
			<h4>Region: 
				<select id="region">
#set($last=$las_webrowset.last())
#set($size = $las_webrowset.getRow())
#set($first=$las_webrowset.beforeFirst())
#set($first_frame='')
#foreach ($row in [01..$size])
  #set($next=$las_webrowset.next())
    #if ($las_webrowset.getString('region_id') != 'G')
      #if ($las_request.getProperty('qc', 'region_name') == $las_webrowset.getString('region_name') )
					<option id="$las_webrowset.getString('region_id')" value="$las_webrowset.getString('region_id')" selected="true">$las_webrowset.getString('region_name')&nbsp;</option>
      #else
					<option id="$las_webrowset.getString('region_id')" value="$las_webrowset.getString('region_id')">$las_webrowset.getString('region_name')&nbsp;</option>
      #end
    #end
#end
#if ($las_request.getProperty('qc', 'region_name') == 'Global')
					<option id="G" value="G" selected="true">Global&nbsp;</option>
#else
					<option id="G" value="G">Global&nbsp;</option>
#end
				</select>
			</h4>

			<h4 class="toplabel">Quality Control Criteria:</h4>
			<div class="value">

				<div class="radiolabel" style="margin-bottom: -0.25em;">Accuracy of calculated aqueous fCO<small><sub>2</sub></small> (at SST)</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fco2accuracy" id="fco2two" />
					<label for="fco2two">&lt; 2 &mu;atm (A, B)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fco2accuracy" id="fco2five" />
					<label for="fco2five">&lt; 5 &mu;atm (C, D)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fco2accuracy" id="fco2ten" />
					<label for="fco2ten">&lt; 10 &mu;atm (E)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fco2accuracy" id="fco2bad" />
					<label for="fco2bad">&gt; 10 &mu;atm (F)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fco2accuracy" id="fco2nocomment" checked="checked" />
					<label for="fco2nocomment">(no comment)</label>
				</div>

				<div class="radiolabel">Followed approved methods/SOP criteria</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="followedsop" id="soptrue" />
					<label for="soptrue">true (A, B, C)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="followedsop" id="sopfalse" />
					<label for="sopfalse">false (D, E, F)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="followedsop" id="sopnocomment" checked="checked" />
					<label for="sopnocomment">(no comment)</label>
				</div>

				<div class="radiolabel">Metadata documentation</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fullmeta" id="metacomplete" />
					<label for="metacomplete">complete (A, B, C, E)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fullmeta" id="metalacking" />
					<label for="metalacking">incomplete (D, F)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="fullmeta" id="metanocomment" checked="checked" />
					<label for="metanocomment">(no comment)</label>
				</div>

				<div class="radiolabel">Data quality</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="gooddata" id="datagood" />
					<label for="datagood">acceptable (A, B, C, D, E)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="gooddata" id="databad" />
					<label for="databad">significant amount of unacceptable data (F)</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="gooddata" id="datanocomment" checked="checked" />
					<label for="datanocomment">(no comment)</label>
				</div>

				<div class="radiolabel">High-quality cross-over</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="crossover" id="crossfound" />
					<label for="crossfound">found with dataset</label>
					<input class="text" type="text" size="16" name="crossexpo" id="crossexpo" />
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="crossover" id="crossnone" />
					<label for="crossnone">none found</label>
				</div>
				<div class="radiovalue">
					<input class="radio" type="radio" name="crossover" id="crossnocomment" />
					<label for="crossnocomment">(no comment)</label>
				</div>

			</div>

			<h4>Quality Control Flag to Assign:
				<select id="flag">
					<option selected="true" value="H">Comment&nbsp;</option>
					<option value="A">A</option>
					<option value="B">B</option>
					<option value="C">C</option>
					<option value="D">D</option>
					<option value="E">E</option>
					<option value="F">F</option>
					<option value="S">Suspend&nbsp;</option>
					<option value="X">Exclude&nbsp;</option>
				</select>
			</h4>

			<h4 class="toplabel">Additional comments:</h4>
			<div class="value">
				<textarea id="addlcomment" cols="80" rows="5"></textarea>
			</div>

			<h4 class="toplabel">Complete QC comment:</h4>
			<div class="value">
				<textarea id="comment" cols="80" rows="10" readonly="true"></textarea>
			</div>

			<div class="buttonpanel">
				<button style="float: right;" id="cancelqc">Cancel</button>
				<button id="submitqc">Submit this QC Evaluation</button>
			</div>

		</div>
	</body>

</html>
