!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! LAS_results.jnl
!
! $Author: ansley $
! $Date: 2006/07/13 18:08:18 $
! 3/30/2007 ACM When writing the map_scale.xml file, first list the urls separately;
!               long URLs can make the Ferret command too long.
! 2/11/2008 ACM Add DATA_MIN, DATA_MAX and DATA_EXISTS to the map scale file for 2D plots. 
! 5/2010    ACM Add axis direction symbols for 1D plots: axis_vert or axis_horiz give the 
!               indep axis, use D for the dep axis.
!              
! 5/2010    ACM Write time range in formatted time strings if a time axis.
! .......................................................................................
!
! LAS_results.jnl creates the result files. 
!
! The argument is the refmap type "box", "xline", "yline", or "point"


! Result "plot_image" is the the image file result_plot_image_filename

! For Google Earth plots, use transparency for white background if the 
! ferret version has that option available.

IF `($its_GE"0|*>1") AND ($ferret_version) GE 6.12` THEN DEFINE SYMBOL trans = /TRANS

IF ($result_plot_image_filename%0|*>1%) THEN FRAME($trans)/FORMAT=gif/FILE="($result_plot_image_filename)"

! Result map_scale_file is output map scale file
! Write the output immediately after drawing the plot; it uses symbols 
! that are set when making the plot. If a colorbar is made, do that after the
! map_scale file is written.
 
! X region for plot does not apply to the abstract axis for 
! the variables SYMS_NAMES, SYMS_VALS, so cancel region
! assume we are running Ferret v5.81 + with /NOROWLAB qualifier on LIST command

cancel region 


IF ($have_pvar"0") THEN 
         LET the_plot_var = pvar  ! from LAS_auto_levels
ELSE
   IF ($native_curvilinear_xy"0|0|*>1") THEN 
      LET the_plot_var = ($ferret_plot_base_var_noregion)
   ELIF ($do_hybrid_z"0|0|*>1") THEN
      LET the_plot_var = ($ferret_plot_base_var_noregion)
   ELIF ($native_Z_plot"0|0|*>1") THEN
      LET the_plot_var = ($ferret_var_0)
   ELIF ($ferret_plot_var"0|0|*>1") THEN
      LET the_plot_var = ($ferret_plot_var)
      IF ($ferret_plot_var"0|sampled_var>1|*>0) THEN LET the_plot_var = ($ferret_plot_var)
   ELSE
      IF ($basemap_url"0|0|*>1") THEN
         USE ($basemap_url)
         LET the_plot_var = ($basemap_var)
      ENDIF
   ENDIF
ENDIF


! First list the urls and variable names; the URLs can be so long they make the
! commands too long for the Ferret command-line buffer. 

IF ($result_map_scale_filename%0|*>1%) THEN 
   LET syms_names = {"DATA_0_URL"}
   LET syms_vals = {"($DATA_0_URL)"}
   LIST/CLOBBER/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals
   LET syms_names = {"DATA_0_VAR"}
   LET syms_vals = {"($DATA_0_VAR)"}
   LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals

   LET syms_names = {"DATA_1_URL"}
   LET syms_vals = {"($DATA_1_URL)"}
   LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals
   LET syms_names = {"DATA_1_VAR"}
   LET syms_vals = {"($DATA_1_VAR)"}
   LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals

   IF `($xstride"0|*>1) EQ 0` THEN DEFINE SYMBOL xstride = 1 
   IF `($ystride"0|*>1) EQ 0` THEN DEFINE SYMBOL ystride = 1

! assume we are running Ferret v5.81_ with /NOROWLAB qualifier on LIST command
   LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals

   LET syms_names = {\
     "PPL$XMIN", "PPL$XMAX", \
      "PPL$YMIN", "PPL$YMAX",\
      "PPL$XPIXEL", "PPL$YPIXEL",\
      "PPL$WIDTH", "PPL$HEIGHT",\
      "PPL$XORG","PPL$YORG",\
      "PPL$XLEN","PPL$YLEN",\
      "XAXIS_MIN","XAXIS_MAX",\
      "YAXIS_MIN","YAXIS_MAX",\
      "VP_TOP_MARGIN","VP_RT_MARGIN",\
      "XSTRIDE","YSTRIDE"}

! For curvilienar grids, region_0_x_lo and region_0_x_hi may
! have been changed to another modulo longitude branch. If so
! then the x axis min and max need to be reset.

   DEFINE SYMBOL xaxlo = ($XAXIS_MIN)
   DEFINE SYMBOL xaxhi = ($XAXIS_MAX)
   IF ($region_0_x_lo_orig"0|*>1") THEN
      IF `($region_0_x_lo_orig) - ($XAXIS_MIN) LT (-350)` THEN 
         DEFINE SYMBOL xaxlo = `($XAXIS_MIN) - 360`
         DEFINE SYMBOL xaxhi = `($XAXIS_MAX) - 360`
      ELIF `($region_0_x_lo_orig) - ($XAXIS_MIN) GT   350 ` THEN 
         DEFINE SYMBOL xaxlo = `($XAXIS_MIN) + 360`
         DEFINE SYMBOL xaxhi = `($XAXIS_MAX) + 360`
      ENDIF
   ENDIF

   DEFINE SYMBOL taxis_dir = 0

   LET syms_vals = {\
      "($PPL$XMIN)", "($PPL$XMAX)", \
      "($PPL$YMIN)", "($PPL$YMAX)", \
      "($PPL$XPIXEL)", "($PPL$YPIXEL)",\
      "($PPL$WIDTH)", "($PPL$HEIGHT)",\
      "($PPL$XORG)", "($PPL$YORG)",\
      "($PPL$XLEN)", "($PPL$YLEN)",\
      "($xaxlo)", "($xaxhi)",\
      "($YAXIS_MIN)", "($YAXIS_MAX)",\
      "($VP_TOP_MARGIN)","($VP_RT_MARGIN)",\
      "($xstride)","($ystride)"}

   IF `($XAXIS_MIN"0|*>1) EQ 0 OR ($YAXIS_MIN"0|*>1) EQ 0 ` THEN LET syms_vals = {\
      "($PPL$XMIN)", "($PPL$XMAX)", \
      "($PPL$YMIN)", "($PPL$YMAX)", \
      "($PPL$XPIXEL)", "($PPL$YPIXEL)",\
      "($PPL$WIDTH)", "($PPL$HEIGHT)",\
      "($PPL$XORG)", "($PPL$YORG)",\
      "($PPL$XLEN)", "($PPL$YLEN)",\
      "($PPL$XMIN1)", "($PPL$XMAX1)", \
      "($PPL$YMIN1)", "($PPL$YMAX1)", \
      "($VP_TOP_MARGIN)","($VP_RT_MARGIN)",\
      "($xstride)","($ystride)"}

! assume we are running Ferret v5.81 or higher with /NOROWLAB qualifier on LIST command
   LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals

! Assume we are running Ferret v6.07+ or higher with symbols AX_HORIZ and AX_VERT 
! defined for 2D plots. Write to the XML the horizontal and vertical axis and any
! attribute positive=
! TODO: Question - do we want a line for a possible positive= attribute to always
!       be written or only when that attribute exists??

   IF `($ax_horiz"0|*>1") OR ($ax_vert"0|*>1")`  THEN 
      LET syms_names = {"AX_HORIZ", "AX_HORIZ_POSTV", "AX_VERT", "AX_VERT_POSTV", \
      "DATA_EXISTS", "DATA_MIN", "DATA_MAX"}

! Find the axis directions

! Remove striding so we can get the attributes of axes

      IF `($native_curvilinear_xy"0") EQ 0` THEN 

      IF ($ax_horiz"0|*>1") THEN
         DEFINE SYMBOL the_axis =  `the_plot_var,RETURN=($ax_horiz)axis`
         IF `STRINDEX("($the_axis)", "(") GT 0` THEN 
	    IF `($($ax_horiz)stride"0") GT 1` THEN 
	       CANCEL AXIS/STRIDE `($ax_horiz)_strided_var,RETURN=($ax_horiz)axis`
               DEFINE SYMBOL the_axis =  `($data_var),RETURN=($ax_horiz)axis`
	       IF `STRINDEX("($the_axis)", "(") EQ 0` THEN
                  LET attlist = (($the_axis)).attnames
	       ELSE
                  LET attlist = ($the_axis).attnames
	       ENDIF
	    ENDIF
         ELSE
            LET attlist = (($the_axis)).attnames
         ENDIF
	 IF `STRINDEX("($the_axis)", "(") EQ 0` THEN \
	   DEFINE SYMBOL the_axis = (($the_axis))
         IF `IS_ELEMENT_OF_STR(attlist, "positive") GT 0` THEN \
         DEFINE SYMBOL AX_HORIZ_POSTV = `($the_axis).positive`
      ELSE
         DEFINE SYMBOL ax_horiz = D
      ENDIF

      IF ($ax_vert"0|*>1") THEN
         DEFINE SYMBOL the_axis =  `the_plot_var,RETURN=($ax_vert)axis`
         IF `STRINDEX("($the_axis)", "(") GT 0` THEN 
	    IF `($($ax_vert)stride"0") GT 1` THEN 
	       CANCEL AXIS/STRIDE `($ax_vert)_strided_var,RETURN=($ax_vert)axis`
               DEFINE SYMBOL the_axis =  `($data_var),RETURN=($ax_vert)axis`
	       IF `STRINDEX("($the_axis)", "(") EQ 0` THEN
                  LET attlist = (($the_axis)).attnames
	       ELSE
                  LET attlist = ($the_axis).attnames
	       ENDIF
            ENDIF
         ELSE
            LET attlist = (($the_axis)).attnames
         ENDIF
	 IF `STRINDEX("($the_axis)", "(") EQ 0` THEN \
	   DEFINE SYMBOL the_axis = (($the_axis))
         IF `IS_ELEMENT_OF_STR(attlist, "positive") GT 0` THEN \
         DEFINE SYMBOL AX_VERT_POSTV = `($the_axis).positive`
      ELSE
         DEFINE SYMBOL ax_vert = D
      ENDIF
      
      ENDIF  ! curvilinear
      IF ($ax_horiz"0|*>1") THEN DEFINE SYMBOL ax_horiz = `DNCASE("($ax_horiz)")`
      IF ($ax_vert"0|*>1") THEN DEFINE SYMBOL ax_vert = `DNCASE("($ax_vert)")`

* Find the data min, max.  If all data was bad, send blank strings to the output.

      LET pplus_default_zmin = 1.E38  ! PPLUS initializes zmin = 1.E38 and zmax = -1.E38
      IF `($data_plotted_min"1.E38") EQ pplus_default_zmin` THEN 
         DEFINE SYMBOL DATA_EXISTS = 0
         CANCEL SYMBOL DATA_MIN
         CANCEL SYMBOL DATA_MAX
      ELSE
         DEFINE SYMBOL DATA_EXISTS = 1
         DEFINE SYMBOL DATA_MIN = ($data_plotted_min)
         DEFINE SYMBOL DATA_MAX = ($data_plotted_max)
      ENDIF

      IF ($its_prop_prop_plot"0|*>1") THEN
          DEFINE SYMBOL ax_horiz = ($data_0_id)
	  DEFINE SYMBOL ax_vert = ($data_1_id)
      ENDIF

      LET syms_vals = {"($AX_HORIZ)", "($AX_HORIZ_POSTV)", "($AX_VERT)", "($AX_VERT_POSTV)",\
       "($DATA_EXISTS)", "($DATA_MIN)", "($DATA_MAX)"}
      
      
      LIST/APPEND/FILE="($result_map_scale_filename)"/NOHEAD/NOROWLAB syms_names, syms_vals
   ENDIF

ENDIF

! Result "colorbar" is the legend of the plot_image...only for Google Earth
IF ($result_colorbar_filename%0|*>1%) THEN GO colorbar

! Result ref_map is a ref map. Save to result_ref_map_filename

IF  ($ferret_use_ref_map%0|false>0|*>1%) THEN 
  CAN VIEW
  SET VIEW full
  GO std_refmap ($region_0_x_lo) ($region_0_x_hi) ($region_0_y_lo) ($region_0_y_hi) $1%box% ($ref_magnify%0%) ($ref_xcompress%0%) ($ref_ycompress%0%)
  FRAME/FORMAT=gif/FILE="($result_ref_map_filename)"
ENDIF

! End of file ------------LAS_results.jnl--------------------------
