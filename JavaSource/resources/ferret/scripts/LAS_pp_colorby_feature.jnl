
! LAS_pp_colorby_feature.jnl
! Draw the correlation plot with icons colored by feature ID.

! Create the 'feature' variables and symbols
! Create a new title that includes subsampling info

! Restart setting plot qualifiers for correlation plot. 
DEFINE SYMBOL qualifiers = /NOLAB

IF `($data_1_var"0|*>1") EQ 0` THEN
  MESSAGE/ERROR **ERROR Correlation product requires two variables to be selected
  EXIT/PROGRAM
ENDIF

DEFINE SYMBOL feature_max = `($rowvar),RETURN=size`

! The mask is 1 for start of features 

LET feature_id = _M[GE=featurevar]
LET feature_len =($rowvar)

IF ($subset_mask"0|*>1") THEN
   LET feature_id = ESEQUENCE(subset_mask) * _M[GE=featurevar]
   LET feature_len = ESEQUENCE(subset_mask) * ($rowvar)
ENDIF

LET idvar = EXPND_BY_LEN(feature_id, ($rowvar), ($rowvar)[m=@sum])

LET decimate_size = `feature_len[m=@max]`

list feature_id, feature_len
list decimate_size

LET tmask = IF idvar[i=@ddb] EQ 1 THEN 1 ELSE 0
LET obs_mask1 = tmask[gx=($ferret_plot_var_0)@ASN]
LET obs_mask2 = IF i[gx=($ferret_plot_var_0)] EQ 1 THEN 1 ELSE 0
LET obs_mask = IF (obs_mask1+obs_mask2) EQ 1 THEN 1

LET pvar = constraints_mask* ($ferret_plot_var_0)
IF ($pvar_reset"0|*>1") THEN LET pvar = constraints_mask* ($pvar_reset)
LET qvar = constraints_mask* ($ferret_plot_var_1)
LET dvar =  idvar

LET data_1_var_z =  EXPNDI_BY_Z(pvar, obs_mask, `nfeatures`, `longest`)
LET data_var_z =  EXPNDI_BY_Z(qvar, obs_mask, `nfeatures`, `longest`)

! Decimation for longitude/latitude plots

LET num_decimate = 10
IF `($numobs) LT num_decimate` THEN LET num_decimate = -1  ! separate cruises but dont decimate

IF `($ferret_plot_var_0"0|longitude>1|*>0") AND ($ferret_plot_var_1"0|latitude>1|*>0") AND\
 (($numobs) GE num_decimate)` THEN

   LET pxvar = ($ferret_plot_var_0)
   IF ($pvar_reset"0|*>1") THEN LET pxvar = ($pvar_reset) ! see LAS_xytvar_setup
   LET qyvar = ($ferret_plot_var_1)
   
   LET var_data = idvar
   
   DEFINE SYMBOL data_x_var = if idvar then pxvar
   DEFINE SYMBOL data_y_var =  if idvar then qyvar
   DEFINE SYMBOL data_var = idvar
   
   ! Arguments are 
   !  min # points for doing decimation 
   !  lon/lat tolerance for piecewise decimation
   !  var tolerance (var at lon/lat)
   
   LET max_range = MAX(($region_x_range), ($region_y_range))
   LET tol = `0.01*LOG(decimate_size)/max_range`
   IF `tol LT 1.e-2` THEN LET tol = 1.e-2

   GO decimate_dsg `num_decimate` `tol` 0.1

   LET pvar = ($data_x_var)
   LET qvar = ($data_y_var)

! data_var is the feature index at each obs index i, with a gap between features.
! Find where the features start now that they are sampled. (Need to remove the gaps
! between features that the script introduces...)

   LET index_sampled = if ($data_var) then ($data_var) else ($data_var)[i=@shf:-1]
   LET new_feature = index_sampled[i=@ddb]
   LET decimated_mask1 = IF new_feature NE 0 THEN 1 ELSE 0
   LET decimated_mask2 = IF I[gx=($data_var)] EQ 1 THEN 1 ELSE 0
   LET ndmask = `pvar,return=isize`
   LET decimated_mask  = IF (decimated_mask1 + decimated_mask2) EQ 1 THEN 1
   
   ! This value of longest is now wrong, but it's too big so should be harmless.
   
   LET data_1_var_z =  EXPNDI_BY_Z(pvar, decimated_mask, `nfeatures`, `longest`)
   LET data_var_z =  EXPNDI_BY_Z(qvar, decimated_mask, `nfeatures`, `longest`)

ENDIF  ! Decimation for longitude/latitude plots


! Set up to plot the data and the linear fit
LET pmask =  subset_mask * data_1_var_z
LET qmask =  subset_mask * data_var_z

LET p = XSEQUENCE( subset_mask * data_1_var_z)
LET q = XSEQUENCE( subset_mask * data_var_z)

! Set up to make polygon plot. If there are not too many features
! color the data according to feature.

DEFINE SYMBOL qualifiers = ($qualifiers)/OVER/NOAXES/NOKEY/NOLAB/

IF `($feature_max) LE ($feature_max_labels)` THEN
   DEFINE SYMBOL ferret_poly_palette = ten_by_levels
   DEFINE SYMBOL qualifiers = ($qualifiers)/PALETTE=($ferret_poly_palette)

! If undefined, set polygon scale according to number of points
   IF ($ferret_poly_scale"1|*>0") THEN 
      GO LAS_set_poly_scale
      DEFINE SYMBOL ferret_poly_scale 0.5*($ferret_poly_scale)
   ENDIF
   IF `($ferret_poly_scale) GE 0.4` THEN DEFINE SYMBOL qualifiers = ($qualifiers)/LINE/THICK=1
ELSE
   DEFINE SYMBOL qualifiers = ($qualifiers)/PALETTE=black
   DEFINE SYMBOL poly_scale = 0.4
ENDIF

DEFINE SYMBOL qualifiers = ($qualifiers)/LINE
DEFINE SYMBOL poly_command POLY($qualifiers)
DEFINE SYMBOL line_color = blue

IF `($feature_max) LE ($feature_max_labels)` THEN

   LET p = XSEQUENCE( subset_mask * data_1_var_z)  ! for regression line
   LET q = XSEQUENCE( subset_mask * data_var_z)

   ! Use different color for each feature 1-10, 11-21, ...
   ! Use different symbols for each set of 10

   LET ncolors = 10
   LET nshapes = 20
   LET polygon_set = `INT(0.5+($feature_max)/nshapes)`
   IF `polygon_set*nshapes LT ($feature_max)`  THEN LET polygon_set = `polygon_set+1`

! See polyshape script for the list of available pre-defined shapes.

! Set the shapes with the same script as in the script 200symbols.jnl
   GO LAS_pp_set_feature_shapes

   LET cmax = `MIN(($feature_max),ncolors)`
   LET c1 = 1
   DEFINE SYMBOL poly_command ($poly_command)/LEVELS=(`c1`,`cmax+1`,1)
   LET ishape = 1
   LET icolor = 1

   LET colr_index = MOD(i[i=1:`nfeatures`],`ncolors`)
   LET allcolors = IF colr_index EQ 0 THEN `ncolors` ELSE colr_index 
   LET dmask = subset_mask * allcolors + 0*qmask

   LET transpmask = TRANSPOSE_XZ(pmask)
   LET transqmask = TRANSPOSE_XZ(qmask)
   LET transdmask = TRANSPOSE_XZ(dmask)

   LET c1 = 1
   LET cn = `ncolors`

   REPEAT/RANGE=1:`nfeatures`:`ncolors`/NAME=ic (\
    DEFINE SYMBOL ishape = `ishape`;\
    LET zx = transpmask[k=`c1`:`cn`];\
    LET zy = transqmask[k=`c1`:`cn`];\
    LET zd = transdmask[k=`c1`:`cn`];\
    LET xpolydat = XSEQUENCE(zx);\
    LET ypolydat = XSEQUENCE(zy);\
    LET dpolydat = XSEQUENCE(zd);\
    LET all_mask = IF xpolydat+ypolydat+dpolydat THEN 1;\
    LET all_x = COMPRESSI(all_mask*xpolydat);\
    LET all_y = COMPRESSI(all_mask*ypolydat);\
    LET all_d = COMPRESSI(all_mask*dpolydat);\
    LET do_it = `xpolydat[i=@ngd] GT 0`;\
     ;\
     IF `do_it AND ($connect_dots"0|0|1|*>1")` THEN \
     PLOT/NOAX/VS/OVER/LINE=6/NOLAB xpolydat, ypolydat ;\
     ;\
    IF `do_it` THEN GO polymark ($poly_command) all_x, all_y, all_d, ($shape($ishape)), ($poly_scale) ;\
     ;\
     LET c1 = `c1 + ncolors`;\
     LET cn = `cn + ncolors`;\
     IF `cn GT nfeatures` THEN LET cn = `nfeatures`;\
     LET ishape = `ishape+1`;\
     PPL shaset protect;\
    )
    
! Note need to protect the colors from one set of 10 to the next
  
ELSE ! all features

   GO polymark ($poly_command) p q p \
     ($ferret_poly_shape"triangle|delta|square|diamond|pentagon|hexagon|circle|star|plus|ex|*>triangle") \
     ($poly_scale)

   DEFINE SYMBOL ngood_data = `p[i=@ngd]`
ENDIF

! End of file ------------ LAS_pp_colorby_feature.jnl--------------------------
