!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! list_csv_data.jnl
! 
! Author: ansley 
! Date: 2011/05/16
!
! Called by list_data.jnl 
! Write csv data: date/time, X, Y, Z, var1, var2, ...

! Cannot list out a pseudo-variable, e.g. Z. In the initialization,
! check for pseutonames. If the variable name is a pseudo-var name, 
! write out name_1 e.g. Z_1 with all the same attributes.

DEFINE SYMBOL frmt = FORMAT=comma/NOROW

LET its_curvi = `( ($ferret_curvi_coord_lat"0|*>1) + STRINDEX("($ferret_view)", "xy") ) GT 1`
IF ($constraint_($num)_lhs"0|Curv_to_Rect_Regridding>1|*>0") THEN LET its_curvi = 0

IF `its_curvi` THEN
   MESSAGE/ERROR ERROR: LIST CSV cannot list data on curvilienar grid 
   EXIT/SCRIPT
ENDIF

! Initialize data and define 1-d lists of variables to write out

REPEAT/RANGE=0:`($data_count)-1`/NAME=outvar (define symbol var_num = `outvar`;; \
  GO LAS_initialize_region ($var_num); \
  GO LAS_initialize_data ($var_num);\
  DEFINE SYMBOL ferret_plot_var_($var_num) =($ferret_plot_var); \
  LET ferret_list_var_($var_num) = XSEQUENCE(($ferret_plot_var)); \
  DEFINE SYMBOL ferret_list_var_($var_num) = ferret_list_var_($var_num); \
  DEFINE SYMBOL size_($var_num)= `($ferret_list_var_($var_num)),return=isize`); \
  IF `($var_num) GT 0` THEN if `size_($var_num) NE size_0` THEN MESSAGE/ERROR ERROR: Variables different sizes;\
  IF `($var_num) GT 0` THEN if `size_($var_num) NE size_0` THEN exit/program )

DEFINE SYMBOL xx = 0
DEFINE SYMBOL yy = 0
DEFINE SYMBOL zz = 0
DEFINE SYMBOL tt = 0
IF `STRINDEX("($ferret_view)", "x") GT 0` THEN \
   DEFINE SYMBOL xx = x[gx=($ferret_plot_var_($var_num)),($region_0_x)]
IF `STRINDEX("($ferret_view)", "y") GT 0` THEN \
   DEFINE SYMBOL yy = y[gy=($ferret_plot_var_($var_num))),($region_0_y)]
IF `STRINDEX("($ferret_view)", "z") GT 0` THEN \
   DEFINE SYMBOL zz = z[gz=($ferret_plot_var_($var_num))),($region_0_z)]
IF `STRINDEX("($ferret_view)", "t") GT 0` THEN \
   DEFINE SYMBOL tt = t[gt=($ferret_plot_var_($var_num))),($region_0_t)]

IF `STRINDEX("($ferret_view)", "x") GT 0` THEN 
   LET longitude = XSEQUENCE(($xx) + 0*($yy) + 0*($zz) + 0*($tt)) 
   LET/UNITS="`($data_0_var),RETURN=xunits`" LON = longitude 
   DEFINE SYMBOL xlist = LON, 
ENDIF
IF `STRINDEX("($ferret_view)", "y") GT 0` THEN 
   LET latitude = XSEQUENCE( 0*($xx) + ($yy) + 0*($zz) + 0*($tt))
   LET/UNITS="`($data_0_var),RETURN=yunits`" LAT = latitude
   DEFINE SYMBOL ylist = lat, 
ENDIF
IF `STRINDEX("($ferret_view)", "z") GT 0` THEN 
   IF `($data_0_var),RETURN=isdepth` THEN
      LET depth = XSEQUENCE(0*($xx) + 0*($yy) + ($zz) + 0*($tt))
      LET/UNITS="`($data_0_var),RETURN=zunits`" dep = depth
      DEFINE SYMBOL zlist = depth, 
   ELSE
      LET height = XSEQUENCE(0*($xx) + 0*($yy) + ($zz) + 0*($tt))
      LET/UNITS="`($data_0_var),RETURN=zunits`" ht = height
      DEFINE SYMBOL zlist = height, 
   ENDIF
ENDIF
IF `STRINDEX("($ferret_view)", "t") GT 0` THEN 
   IF `($ferret_timelab_res"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_timelab_res = day
   LET ttime = XSEQUENCE(0*($xx) + 0*($yy) + 0*($zz) + ($tt)) 
   LET/UNITS="`($data_0_var),RETURN=tunits` since `($data_0_var),RETURN=t0`" TIME = ttime
   LET datetime = TAX_DATESTRING (ttime, t[gt=($data_0_var)], "($ferret_timelab_res)")
   IF ($ferret_timelab_res"|year>1|month>1|*>0") THEN LET TIME = datetime
   DEFINE SYMBOL tlist = TIME, 
ENDIF


LET/units="($data_0_units)" ($data_0_var)_list = ($ferret_list_var_0)
DEFINE SYMBOL vars_out = ($tlist) ($xlist) ($ylist) ($zlist) ($data_0_var)_list
IF `($data_count"1") GT 1` THEN
   REPEAT/RANGE=1:($data_count"1")/NAME=outvar )\
      DEFINE SYMBOL var_num = `outvar`; \
      LET/units="($data_($var_num)_units)" data_($var_num)_var)_list = ($ferret_list_var_($var_num)); \
      DEFINE SYMBOL vars_out = ($vars_out), data_($var_num)_var)_list )
ENDIF

! the default is set under 1/4 of Ferret's memory allowing for LET definitions 
LET use_size = 1000000*($ferret_memory)/4.
LET max_size = ($MAX_LIST_SIZE"`use_size`")

LET ndims = `STRLEN("($ferret_view)")`
LET nlist = ndims + ($data_count)

IF `($size_0)* nlist GT max_size` THEN
   SET MEM/SIZ=300
   LET use_size = 1000000*($ferret_memory)/4.
ENDIF

IF `($size_0)* nlist LE max_size` THEN

   ! ... list in one big chunk

      IF `($ferret_format"0|asc>1|*>0") + ($ferret_format"0|txt>1|*>0") GT 0` THEN  
         IF ($var_history"0|*>1") THEN LIST/APPEND/NOHEAD/FORMAT=(A)/FILE="($result_ferret_listing_filename)" var_hist
      ENDIF

      LIST/APPEND/FILE/($frmt) ($vars_out)

ELSE
   MESSAGE/ERROR **ERROR too much data for csv listing

ENDIF
! End of script ---------- list_csv_data.jnl----------------------------
