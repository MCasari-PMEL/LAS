!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! list_prop_prop.jnl
! 
! Author: ansley
! Date: 08-2013

! lists prop_prop_plot.jnl creates an ascii listing of the data from a 
! property-property plot, using the data variable in symbol data_0_var,
! the second variable from data_1_var and optionally colored by data_2_var.

set mode ver:always

DEFINE SYMBOL frmt width=1024/norow

IF ($ferret_data_format"0|csv>1|tsv>1|asc>1|*>0") THEN 
   DEFINE SYMBOL frmt = ($frmt)/($ferret_data_format"|tsv>format=tab|csv>format=comma|asc>heading=enhanced")
ENDIF

SET LIST/FILE="($result_ferret_listing_filename)"
SET LIST/prec=6

DEFINE SYMBOL its_listing = 1
GO setup_prop_prop


! The variables must be the same size. Check and set up a nice message if not.

LET xsize = `xvar,RETURN=isize`
LET ysize = `yvar,RETURN=isize`

IF `xsize NE ysize` THEN 
  MESSAGE/ERROR **ERROR The variables must have the same dimensions: ($data_0_var), ($data_1_var)
  EXIT/PROGRAM
ENDIF

! Apply any constraints

LET var_mask = 1+0*time
LET text_mask = 1
LET ntext_masks = 0

IF ($constraint_0_lhs"0|*>1) THEN
   GO prop_prop_constraints
ENDIF


LET cruise_obs_mask = EXPND_BY_LEN(cruise_mask, rowsize,`rowsize[m=@sum]`)
LET constraints_mask = var_mask* text_mask* cruise_obs_mask

IF ($color_by"0|*>1") THEN 
   DEFINE SYMBOL plot_arg = ($xvar), ($yvar), zvar
   sh var zvar
   DEF SYM ztype = `zvar,RETURN=dtype`
   IF ($ztype"0|CHAR>1|*>0") THEN DEF SYM is_string = 1

   LET zsize = `zvar,RETURN=isize`
   IF `zsize NE xsize` THEN

! Is this a DSG file? If so is one of the variables on the sample-dimension (obs) axis
! and the other on the trajectory (or profile) axis?  May need to expand a variable 
! onto the obs axis
! If a variable on the M axis is a string, create a numeric ID variable, index 1,2,3, ...


      DEF SYM zshape = `zvar,RETURN=shape`
      IF `($zshape"0|E>1|*>0)` THEN

         ! Expand all strings into obs axis
         IF ($is_string"0|*>1") THEN 
	    LET zvar = EXPND_BY_LEN_STR(zvar, rowsize,`rowsize[m=@sum]`)
	 ELSE
	    LET zvar = EXPND_BY_LEN(zvar, rowsize,`rowsize[m=@sum]`)
         ENDIF
      ENDIF
      LET zsize = `zvar,RETURN=isize`

      IF `zsize NE xsize` THEN
         MESSAGE/ERROR **ERROR The variables must have the same dimensions: ($data_0_var), ($data_2_var)
         EXIT/PROGRAM
      ENDIF
      
      DEFINE SYMBOL zvar = constraints_mask*zvar

   ENDIF
   DEFINE SYMBOL color_by_title = `zvar,RETURN=title`

ENDIF  ! color-by 3rd var

DEFINE SYMBOL xvar = constraints_mask* xvar
DEFINE SYMBOL yvar = constraints_mask* yvar

!!!!!!!!!!!!!

! Do we want the date string or the date coordinate?  List both.
IF `($ferret_timelab_res"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_timelab_res = minute

DEFINE SYMBOL t_units_string = `TIME.units`
LET nsince = `STRINDEX("($t_units_string)", "since")-1`
IF `nsince GT 0` THEN DEFINE SYMBOl tunits = `SUBSTRING("($t_units_string)", 1, nsince)`

DEFINE SYMBOL data_prop_var = ($data_0_var)
DEFINE SYMBOL ferret_prop_var = ($ferret_plot_var_0)
DEFINE SYMBOL ferret_plot_var = ($ferret_plot_var_1)
IF `STRINDEX( UPCASE("($data_0_var)"), "TIME") GT 0` THEN DEFINE SYMBOL tunits = ($data_0_units)
IF `STRINDEX( UPCASE("($data_1_var)"), "TIME") GT 0` THEN DEFINE SYMBOL tunits = ($data_1_units)

DEFINE SYMBOL plot_arg = ($xvar), ($yvar)
IF `($color_by_title"0|*>1") AND ($ferret_annotations%0|*>1%) EQ 0` THEN \ 
 LABEL/NOUSER `($ppl$width)-($ppl$xorg)-0.2`, -0.7, 1, 0, 0.12 Colored by <NL>($color_by_title)

! set up any constraint labels
GO set_constraint_labels

! apply mask to list variables

LET size = `constraints_mask[i=@ngd]`

IF `IS_ELEMENT_OF_STR_N(varnames, "time") GT 0` THEN

! Make a time axis from the time coordinates and use it to compute the date strings.
   LET amin = time[i=@MIN]
   LET amax = time[i=@MAX]
   DEFINE SYMBOL is_time = 1
   GO LAS_is_range amin amax
   DEFINE AXIS/T=`ax_lo`:`ax_hi`:`del_ax`/T0="`TIME.time_origin`"/UNITS=($tunits) haxis

   LET timesample = COMPRESSI(constraints_mask*time)
   LET/TITLE="Time"/UNITS="`time,RETURN=units`" Times = timesample
   LET/TITLE="Date"/UNITS="Date String" Dates = TAX_DATESTRING (Times[i=1:`size`], t[gt=haxis], "($ferret_timelab_res%($tunits)%)")

   LET nlist = 2
   DEFINE SYMBOL vars_out = Dates, Times, 

ENDIF  ! dates, times

! Define Longitude and Latitude variables at the masked locations

IF `IS_ELEMENT_OF_STR_N(varnames, "time") GT 0` THEN

   LET/TITLE="`longitude,RETURN=title`"/UNITS="`longitude,RETURN=units`" Longitude_ = COMPRESSI(constraints_mask*longitude)
   LET/TITLE="`latitude,RETURN=title`"/UNITS="`latitude,RETURN=units`" Latitude_ = COMPRESSI(constraints_mask*latitude)

   LET nlist = `nlist + 2`
   DEFINE SYMBOL vars_out = ($vars_out) Longitude_, Latitude_,  

ENDIF  ! longitude, latitude8/27/2013

! Define variables with titles

LET/TITLE="($data_0_title)"/UNITS="($data_0_units)" ($data_0_var)_ = COMPRESSI(constraints_mask*($ferret_plot_var_0))
LET/TITLE="($data_1_title)"/UNITS="($data_1_units)" ($data_1_var)_ = COMPRESSI(constraints_mask*($ferret_plot_var_1))

LET nlist = `nlist + 2`
DEFINE SYMBOL vars_out = ($vars_out) ($data_0_var)_, ($data_1_var)_ 

! color-by variable on the prop-prop plot:

IF ($data_2_var"0|*>1") THEN 
   
   IF ($is_string"0|*>1") THEN  
      LET ii = i[g=time]
      LET iindices = IF constraints_mask THEN ii
      LET compress_mask = COMPRESSI(iindices)
      LEt nok = `compress_mask[i=@ngd]`
      LET/TITLE="($data_2_title)" ($data_2_var_in)_ = SAMPLEI (zvar, compress_mask[i=1:`nok`])
   ELSE
      LET/TITLE="($data_2_title)"/UNITS="($data_2_units)" ($data_2_var_in)_ = COMPRESSI(constraints_mask*zvar)
   ENDIF
   LET nlist = `nlist + 1`
   DEFINE SYMBOL vars_out = ($vars_out), ($data_2_var_in)_
ENDIF

LIST/NOHEAD/NOROW/FILE/CLOBBER/FORMAT=("Total Number of Records", F10.0) `size`

DEFINE SYMBOL list_quals = APPEND

! Constraint labels

IF `($note_num"0") GT 0` THEN
   REPEAT/RANGE=1:($note_num)/name=q (\
     DEFINE SYMBOL qq = `q`; \
     SAY/OUTFILE="($result_ferret_listing_filename)"/APPEND   ($note_($qq)_lab) )
ENDIF

LET blank = " "
LIST/NOHEAD/NOROW/FILE/APPEND/FORMAT=(A) blank

! the default is set under 1/4 of Ferret's memory allowing for LET definitions 
LET use_size = 1000000*($ferret_memory)/4.
LET max_size = ($MAX_LIST_SIZE"`use_size`")


IF `size* nlist GT max_size` THEN
   IF `($ferret_memory"25.6") LT 300` THEN SET MEM/SIZ=300
   LET use_size = 1000000*($ferret_memory)/4.
ENDIF

sh sym vars_out
sh sym ferret_format
IF `size* nlist LE max_size` THEN
! 
! ... list in one big chunk
!
   IF `($ferret_format"0|asc>1|*>0") + ($ferret_format"0|txt>1|*>0") GT 0` THEN  
      IF ($var_history"0|*>1") THEN LIST/($list_quals)/NOHEAD/FORMAT=(A) var_hist
      DEFINE SYMBOL list_quals = APPEND
   ENDIF

   LIST/i=1:`size`/($list_quals)/FILE/($frmt) ($vars_out) 

ELSE
   LET nchunk = INT(size/ max_size)
   IF `nchunk LT 2` THEN LET nchunk = 2
   LET ichunk = INT(size/ nchunk) 
   LET i1 = 1
   LET i2 = `ichunk`
   REPEAT/RANGE=1:`nchunk+1` ( \
     LIST/($list_quals)/FILE/($frmt)/I=`i1`:`i2` ($vars_out); \
     CANC MEM/ALL; \
     DEFINE SYMBOL list_quals = APPEND/NOHEAD; \
     LET i1 = `i2+1`; \
     LET i2 = `i2+ichunk`; \
     IF `i1 GT size` THEN EXIT/LOOP; \
     IF `i2 GT size` then LET i2 = size)

ENDIF

! ----- End of list_prop_prop.jnl ------------------------------------------------

