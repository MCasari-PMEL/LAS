! transform_1_season_per_year.jnl
!  Returns data with one value per year, from monthly data input.
!  Season length may be:
!    1 month (e.g. each January or each April), or 
!    3 month (e.g. each Jan-Feb-March average or Jun-Jul-Aug average, etc), or
!    5 month (e.g. each Mar-Apr-May-Jun-Jul or Nov-Dec-Jan-Feb-Mar)
!  The output time axis is centered on the middle month of the seasonal average

! Inputs:
! The usual LAS Ferret symbols, defining dataset, data variable, region
! ferret_season_length  Symbol defining the length in months of the average, may be 1, 3, or 5
! ferret_season_center  Symbol defining the month on which the average is to be centered.
! 
! Results:
! Defines ferret_plot_var with the correct sampling or averaging in time
! Adds text to ferret_plot_title explaining the sampling or averaging.

! TODO:  What if some other transformation has been defined on the Time Axis??
! 
! TODO:  Can we count on the datasets starting with L=1 in January?? This script assumes so.
!
! TODO: the definitions are based on the entire time axis

! Check input symbols
! The script can handle any season length between 1 and 12, but limit it here to 1, 3, 5

! The lhs constraint contains Season_length_1, Season_length_3, or Season_length_5
LET ipos = STRLEN("($constraint_0_lhs)")
DEFINE SYMBOL ferret_season_length = `SUBSTRING("($constraint_0_lhs)", ipos, 1)`

! The rhs constraint contains a month number 1 through 12.
DEFINE SYMBOL ferret_season_center = ($constraint_0_rhs)

IF `($ferret_season_length"0|1>1|3>1|5>1|*>0") EQ 0` THEN
  DEFINE SYMBOL error_status = ERROR
  DEFINE SYMBOL error_type = TRANSFORM
  DEFINE SYMBOL error_string = Season Length = ($ferret_season_length). Must be 1, 3, or 5
  EXIT/SCRIPT
ENDIF

IF `( ($ferret_season_center"0") LE 0 ) OR ( ($ferret_season_center"0") GT 12 )` THEN
  DEFINE SYMBOL error_status = ERROR
  DEFINE SYMBOL error_type = TRANSFORM
  DEFINE SYMBOL error_string = Season centering is ($ferret_season_center). Must be a month between 1 and 12
  EXIT/SCRIPT
ENDIF

LET season_length = ($ferret_season_length)

! The dataset, region and plot variable have already been initialized
LET S1_the_plot_var = ($ferret_plot_var)
LET tt = t[gt=S1_the_plot_var]
LET tsiz = `tt,RETURN=lsize`

LET n1 = `S1_the_plot_var,RETURN=lstart`
LET nn = `S1_the_plot_var,RETURN=lend`


! Correction if the dataset time axis does not start in January.
LET first_month_data = TAX_MONTH(`tt[L=1]`, tt)
LET first_month_selected = tax_month(tt[L=`n1`], tt)

LET loffset = `($ferret_season_center) - ( 1+INT(season_length/2) ) - (first_month_data-1)`
IF `loffset LT 0` THEN 
   LET loffset = `loffset + 12`
   DEFINE SYMBOL offset_year_1 = 1
ENDIF
   
!IF `STRINDEX ( UPCASE("($ferret_view)"), "T") EQ 0` THEN 
!   LET n1 = MAX(1, `n1 - ($ferret_season_length)` )
!   LET nn = MIN(

! Get the string corresponding to the month at the center.
LET months = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
DEFINE SYMBOL mon1 = `months[I=($ferret_season_center)]`

! If the season length is 1, we just need to set up some striding.

IF `season_length EQ 1` THEN
   LET S1_the_plot_var = ($ferret_xyz_var)
! 1 time step in result region, choose the month specified for the season_center which
! is closest to the month chosen on the time widget.

   IF `nn EQ n1` THEN 	
      IF `STRINDEX("($ferret_view)", "t") EQ 0` THEN 
         LET L1 = n1 + loffset - (first_month_selected-1)
         IF `ABS( first_month_selected-($ferret_season_center) ) GT 6` THEN  
            IF `first_month_selected GT ($ferret_season_center)` THEN LET L1 = `L1+12`
            IF `first_month_selected LT ($ferret_season_center)` THEN LET L1 = `L1-12`
            IF `L1 GT tsiz` THEN LET L1 = tsiz
            IF `L1 LT 1` THEN LET L1 = 1
         ENDIF
      ENDIF
      DEFINE SYMBOL ferret_plot_var S1_the_plot_var[L=`L1`]
      DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) every ($mon1)
   ELSE
      LET L1 = n1 - first_month_selected
      LET L1 = `n1 + loffset - (first_month_selected-1)`
      DEFINE SYMBOL ferret_plot_var S1_the_plot_var[L=`L1`:`nn`:12]
      DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) every ($mon1)
   ENDIF

ELSE



! When there is just one time in the result, redefine S1_the_plot_var and the 
! index range for the time axis. The computation will use an expanded time range
! and then sample from that the desired output time.

   IF `nn EQ n1` THEN
      DEFINE SYMBOL ferret_expand_time = 1
      IF `STRINDEX("($ferret_view)", "t") EQ 0` THEN 
         LET S1_the_plot_var = ($ferret_xyz_var)
         IF `($REGION_X_LO) LT 0` THEN
            LET S1_the_plot_var =  ($data_var)[d=($data_num),($region_x_p360)]
            IF ($region_y"0|*>1") THEN \
              LET S1_the_plot_var =  ($data_var)[d=($data_num),($region_x_p360),($region_y)]
            IF `($region_y"0|*>1") AND ($region_z"0|*>1")` THEN \
               LET S1_the_plot_var = ($data_var)[d=($data_num),($region_x_p360),($region_y)],($region_z)]
         ENDIF
   
         LET L1 = n1 + loffset - (first_month_selected-1)
         IF `first_month_selected GT ($ferret_season_center) AND first_month_selected-($ferret_season_center) LT 6` THEN LET L1 = `L1-12`
         IF `L1 GT tsiz` THEN LET L1 = tsiz
         IF `L1 LT 1` THEN LET L1 = 1
         LET nn = `L1 + 24`
         LET n1 = `L1`
         IF `L1 EQ tsiz` THEN
            LET n1 = `L1 - 24`
            LET nn = `L1`
         ENDIF
      ENDIF
   ENDIF

! Define a variable containing the indices that correspond to the data we 
! need for the seasonal averages. Start with the first month needed; if
! centering is at the start of a year, avgs run across the end of a year, 
! so if possible start before the first year in the region, or start at 
! the end of year 1.

   
! Create the list of indices corresponding to the months to be averaged. tsiz 
! is the length of the entire axis, so mask that for the region of time that 
! is in effect.

   LET S1_L_indx = TSEQUENCE(k[k=1:`season_length`] + 12*(l[l=1:`INT(tsiz/12)`]-1) + loffset)
   LET time_mask1 = IF S1_L_indx GE n1 THEN 1
   LET time_mask = time_mask1* (IF S1_L_indx LE nn THEN S1_L_indx)
   LET nmsk = MAX(1, `time_mask[L=@ngd]`)
   LET S1_L_indx_T = COMPRESSL(time_mask)

! Sample the variable at only the months that will be used in the avgs.
   LET S1_seas_months = SAMPLEL(S1_the_plot_var,S1_L_indx_T[l=1:`nmsk`])
   LET tsample = SAMPLEL(t[gt=S1_the_plot_var],S1_L_indx_T[l=1:`nmsk`])

   DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` taxis_sampled = tsample
   LET s1_to_average = S1_seas_months[gt=taxis_sampled@ASN]

! Index list, once per year on the correct month

   IF `loffset LT 0` THEN LET loffset = `loffset + 12`
   LET L1 = 1+INT(season_length/2)

   DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` timeax_years = tsample[L=`(1+INT(season_length/2))`:`NMSK`:($ferret_season_length)]
   DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` timeax_years = tsample[L=`L1`:`NMSK`:($ferret_season_length)]

! Average from the n-Month-per-year axis to once per year.
! Weight by the box sizes from the original time axis.

   LET boxes = tbox[gt=tt]
   LET boxes_sampled = SAMPLEL(boxes,S1_L_indx_T[l=1:`nmsk`])
   LET weights = boxes_sampled[gt=taxis_sampled@ASN]
   LET s1_mask = IF s1_to_average THEN 1
   LET weights2D = s1_mask * boxes_sampled

   LET S1_weighted = s1_to_average*weights2D
   LET S1_sum = S1_weighted[GT=timeax_years@SUM]
   LET weight_sum = weights2D[GT=timeax_years@SUM]
   LET S1_seas_per_year = S1_sum/weight_sum 

   DEFINE SYMBOL ferret_plot_var S1_seas_per_year
   IF ($ferret_expand_time"0|*>1) THEN DEFINE SYMBOL ferret_plot_var S1_seas_per_year[($region_t)]

! Add information to the title
   DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) (($ferret_season_length)-month ave, every ($mon1))

ENDIF  ! Season length longer than 1
