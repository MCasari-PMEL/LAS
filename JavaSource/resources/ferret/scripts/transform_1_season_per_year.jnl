! transform_1_season_per_year.jnl
!  Returns data with one value per year, from monthly data input.
!  Season length may be:
!    1 month (e.g. each January or each April), or 
!    3 month (e.g. each Jan-Feb-March average or Jun-Jul-Aug average, etc), or
!    5 month (e.g. each Mar-Apr-May-Jun-Jul or Nov-Dec-Jan-Feb-Mar)
!  The output time axis is centered on the middle month of the seasonal average

! Inputs:
! The usual LAS Ferret symbols, defining dataset, data variable, region
! variable number (0 or 1 if this is a comparison) 


! ferret_season_length  Symbol defining the length in months of the average, may be 1, 3, or 5
! ferret_season_center  Symbol defining the month on which the average is to be centered.
! 
! Results:
! Defines ferret_plot_var with the correct sampling or averaging in time
! Adds text to ferret_plot_title explaining the sampling or averaging.

! TODO:  What if some other transformation has been defined on the Time Axis??
! 
! TODO:  Can we count on the datasets starting with L=1 in January?? This script assumes so.
!
! TODO: the definitions are based on the entire time axis

! Check input symbols
! The script can handle any season length between 1 and 12, but limit it here to 1, 3, 5

! If there is no T axis (a time-averaged variable) then just don't do this operation.
IF `($region_t_lo"0|*>1") EQ 0` THEN EXIT/SCRIPT

! The lhs constraint contains Season_length_1, Season_length_3, Season_length_5, ..., Season_length_11
LET ilen = STRLEN("($constraint_0_lhs)")
LET ipos = STRRINDEX("($constraint_0_lhs)", "_") + 1

DEFINE SYMBOL ferret_season_length = `SUBSTRING("($constraint_0_lhs)", ipos, 1)`
IF `ilen GT ipos` THEN DEFINE SYMBOL ferret_season_length = `SUBSTRING("($constraint_0_lhs)", ipos, 2)`

! The rhs constraint contains a month number 1 through 12.
DEFINE SYMBOL ferret_season_center = ($constraint_0_rhs)

DEFINE SYMBOL num ($1"0")

!IF `($ferret_season_length"0|1>1|3>1|5>1|*>0") EQ 0` THEN 
IF `($ferret_season_length"0|1>1|3>1|5>1|7>1|9>1|11>1|*>0") EQ 0` THEN 
  DEFINE SYMBOL error_status = ERROR
  DEFINE SYMBOL error_type = TRANSFORM
!  DEFINE SYMBOL error_string = Season Length = ($ferret_season_length). Must be 1, 3, or 5
  DEFINE SYMBOL error_string = Season Length = ($ferret_season_length). Must be odd, between 1 and 11
  EXIT/SCRIPT
ENDIF 

! These things should be in the configuration or an init script...

SET AXIS/MODULO `($data_var),RETURN=xaxis`
CAN MODE LON
LET xx = x[gx=($data_var)]
LET x1 = `($data_var),RETURN=xstart`
LET xn = `($data_var),RETURN=xend`
SET MODE/LAST LON
IF `($region_x_hi) LT x1` THEN 
   DEFINE SYMBOL ferret_xyz_var = ($data_var)[d=($data_num),($region_xp360)]
   IF ($region_yz"0|*>1") THEN \
      DEFINE SYMBOL ferret_xyz_var = ($data_var)[d=($data_num),($region_xp360)($region_yz)]
ENDIF

IF `($region_x_lo) GT xn` THEN 
   DEFINE SYMBOL ferret_xyz_var = ($data_var)[d=($data_num),($region_xm360)]
   IF ($region_yz"0|*>1") THEN \
      DEFINE SYMBOL ferret_xyz_var = ($data_var)[d=($data_num),($region_xm360)($region_yz)]
ENDIF

IF `( ($ferret_season_center"0") LE 0 ) OR ( ($ferret_season_center"0") GT 12 )` THEN 
   DEFINE SYMBOL error_status = ERROR
   DEFINE SYMBOL error_type = TRANSFORM
   DEFINE SYMBOL error_string = Season centering is ($ferret_season_center). Must be a month between 1 and 12
   EXIT/SCRIPT
ENDIF 

LET season_length = ($ferret_season_length)

! The dataset, region and plot variable have already been initialized
LET S($num)_the_plot_var = ($ferret_t_var)
LET S($num)_the_plot_var = ($ferret_plot_var)

IF `season_length EQ 1` THEN LET S($num)_the_plot_var = ($ferret_plot_var)
LET S($num)_the_plot_var_noregion = ($ferret_plot_var_noregion)

! If we have averaged over T then cant do this. Return a message.
DEFINE SYMBOL op_num = `($data_num) - 1`
IF ($DATA_($op_num)_ANALYSIS_AXIS_0_OP"0|*>1") THEN  
   DEFINE SYMBOL error_status = ERROR
   DEFINE SYMBOL error_type = TRANSFORM
   DEFINE SYMBOL error_string Cannot do seasonal average on a time-averaged variable
   EXIT/SCRIPT
ENDIF

LET tt = t[gt=S($num)_the_plot_var]
LET tsiz = `tt,RETURN=lsize`

LET n1 = `S($num)_the_plot_var,RETURN=lstart`
LET nn = `S($num)_the_plot_var,RETURN=lend`
LET lmax = `S($num)_the_plot_var,RETURN=lend`

! Correction if the dataset time axis does not start in January.
LET first_month_data = TAX_MONTH(tt[L=1], tt)
LET first_month_selected = TAX_MONTH(tt[L=`n1`], tt)

DEFINE SYMBOL loffset = `($ferret_season_center) - ( 1+INT(season_length/2) ) - (first_month_data-1)`
DEFINE SYMBOL loffset = `1+($ferret_season_center) - ( 1+INT(season_length/2) ) - (first_month_data-1)`
IF `n1+($loffset) LT 0` THEN  
   DEFINE SYMBOL loffset = `($loffset) + 12`
   DEFINE SYMBOL offset_year_1 = 1
ENDIF

! Get the string corresponding to the month at the center.
LET months = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"}
DEFINE SYMBOL mon1 = `months[I=($ferret_season_center)]`
CAN VAR months

! If the season length is 1, we just need to set up some striding.

IF `season_length EQ 1` THEN 
! 1 time step in result region, choose the month specified for the season_center which
! is closest to the month chosen on the time widget.

   IF `nn EQ n1` THEN 
   LET S($num)_the_plot_var = ($ferret_xyz_var)

      IF `STRINDEX("($ferret_view)", "t") EQ 0` THEN  
         LET L1 = n1 + ($loffset) - (first_month_selected-1)
         IF `ABS( first_month_selected-($ferret_season_center) ) GT 6` THEN  
            IF `first_month_selected GT ($ferret_season_center)` THEN LET L1 = `L1+12`
            IF `first_month_selected LT ($ferret_season_center)` THEN LET L1 = `L1-12`
            IF `L1 GT tsiz` THEN LET L1 = tsiz
            IF `L1 LT 1` THEN LET L1 = 1
         ENDIF
      ENDIF

      LET S($num)_the_plot_var = ($ferret_xyz_var)
      DEFINE SYMBOL ferret_plot_var S($num)_the_plot_var[L=`L1`]

      DEFINE SYMBOL ferret_plot_var_noregion S($num)_the_plot_var_noregion[L=`L1`]
      DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) every ($mon1)
   ELSE 
      LET L1 = n1 - first_month_selected
      LET L1 = `n1 + ($loffset) - (first_month_selected-1)`
      DEFINE SYMBOL ferret_plot_var S($num)_the_plot_var[L=`L1`:`nn`:12]
      DEFINE SYMBOL ferret_plot_var_noregion S($num)_the_plot_var_noregion[L=`L1`:`nn`:12]
      DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) every ($mon1)
   ENDIF 

ELSE
!

! When there is just one time requested and if the time falls at the
! start of the data series and before the start of the averaging interval,
! return the first possible val. Likewise if the time requested is after
! the end of the last interval, return last average.
! The next section is checking just for these cases that fall at the start or end.

LET S($num)_the_plot_var = ($ferret_xyz_var)
LET first_year = TAX_YEAR(tt[L=1], tt)
LET last_year = TAX_YEAR(tt[L=`tsiz`], tt)
LET first_year_selected = TAX_YEAR(tt[L=`n1`], tt)

LET before_first = 0
IF `(first_year_selected EQ first_year) AND \
    (first_month_selected LT ($ferret_season_center) )` THEN LET before_first = 1
LET after_last = 0
IF `(first_year_selected EQ last_year) AND \
    (first_month_selected GT ($ferret_season_center) )` THEN LET after_last = 1

   IF `nn EQ n1 AND (after_last + before_first) GT 0` THEN 

      IF `before_first` THEN 
         LET L1 = `($ferret_season_center) - ( 1+INT(season_length/2) )`
         LET L2 = `L1 + season_length - 1`
         IF `L1 LT 1` THEN LET L1 = 1
         DEFINE SYMBOL ferret_plot_var = S($num)_the_plot_var[L=`L1`:`L2`@ave]
      
         DEFINE SYMBOL ferret_plot_title \
          ($ferret_plot_title) (($ferret_season_length)-month ave, Centered ($mon1))
         DEFINE SYMBOL data_var_transform = \
          , (($ferret_season_length)-month ave, Centered ($mon1))

         DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
         DEFINE SYMBOL tcoord = `t[gt=S($num)_the_plot_var,T="($region_t_lo)"]`
         DEFINE SYMBOL upper_left_($n_left_labels) = `TAX_DATESTRING(($tcoord), tt, "day")`
         DEFINE SYMBOL upper_left_($n_left_labels) = TIME ($upper_left_($n_left_labels)) 
         DEFINE SYMBOL unlab_t = 1
         DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
         DEFINE SYMBOL upper_left_($n_left_labels) = "(Data centered nearest ($mon1))"

         EXIT/SCRIPT

      ELIF `after_last` THEN 
         DEFINE SYMBOL year_selected = `first_year_selected`
         DEFINE SYMBOL date_center = "15-($mon1)-($year_selected)"
         LET L1 = `L[gt=tt,t=($date_center)]`
         LET L2 = `L1 + season_length - 1`
         IF `L2 GT tsiz` THEN LET L2 = `tsiz`
         DEFINE SYMBOL ferret_plot_var = S($num)_the_plot_var[L=`L1`:`L2`@ave]
      
         DEFINE SYMBOL ferret_plot_title \
        ($ferret_plot_title) (($ferret_season_length)-month ave, Centered ($mon1))
         DEFINE SYMBOL data_var_transform = \
        , (($ferret_season_length)-month ave, Centered ($mon1))

         DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
         DEFINE SYMBOL tcoord = `t[gt=S($num)_the_plot_var,T="($region_t_lo)"]`
         DEFINE SYMBOL upper_left_($n_left_labels) = `TAX_DATESTRING(($tcoord), tt, "day")`
         DEFINE SYMBOL upper_left_($n_left_labels) = TIME ($upper_left_($n_left_labels)) 
         DEFINE SYMBOL unlab_t = 1
         DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
         DEFINE SYMBOL upper_left_($n_left_labels) = "(Data centered nearest ($mon1))"

         EXIT/SCRIPT
      ENDIF 
   ENDIF

! When there is just one time in the result, redefine S($num)_the_plot_var and the 
! index range for the time axis. The computation will use an expanded time range
! and then sample from that the desired output time.

   IF `nn EQ n1` THEN 
      LET S($num)_the_plot_var = ($ferret_xyz_var)

      LET L1 = n1 + ($loffset) - (first_month_selected-1)
      IF `first_month_selected GE ($ferret_season_center) AND first_month_selected-($ferret_season_center) LT 6` THEN LET L1 = `L1-12`
      IF `first_month_selected LT ($ferret_season_center) AND ($ferret_season_center)-first_month_selected GT 6` THEN LET L1 = `L1-24`
      IF `L1 GT tsiz` THEN LET L1 = tsiz
      IF `L1 LT 1` THEN LET L1 = `L1-12`
      IF `L1 LT 1` THEN LET L1 = 1
      LET nn = `L1 + 24`
      IF `L1 EQ tsiz` THEN 
         LET n1 = `L1 - 24`
         LET nn = `L1`
      ENDIF

      LET tt = t[gt=($data_var)]
      LET tpts1 = tt[L=`n1`]
      LET tpts2 = tt[L=`nn`]
      LET endbracket = STRRINDEX("($ferret_xyz_var)", "]") - 1
      LET theplotvar = "`SUBSTRING("($ferret_xyz_var)", 1, endbracket)`"
      LET S($num)_the_plot_var = `theplotvar`,L=`L1`:`nn`]
      DEFINE SYMBOL n_left_labels = `($n_left_labels"0")+1`
      DEFINE SYMBOL upper_left_($n_left_labels) = "(Data centered nearest ($mon1))"
      DEFINE SYMBOL single_time = 1
      DEFINE SYMBOL ferret_expand_time = 1

   ENDIF 

   IF `nn-n1 LT 24` THEN 
      DEFINE SYMBOL ferret_expand_time = 1

      LET nn = MIN(`tsiz`, `nn + 24`)
      LET n1 = MAX(1, `n1-24`)
   ENDIF
   
! Define a variable containing the indices that correspond to the data we 
! need for the seasonal averages. Start with the first month needed; if
! centering is at the start of a year, avgs run across the end of a year, 
! so if possible start before the first year in the region, or start at 
! the end of year 1.

   
! Create the list of indices corresponding to the months to be averaged. tsiz 
! is the length of the entire axis, so mask that for the region of time that 
! is in effect.

   LET L_indx = TSEQUENCE(k[k=1:`season_length`] + 12*(l[l=1:`INT(tsiz/12)`]-1) + ($loffset))
   LET time_mask1 = IF L_indx GE `n1` THEN 1
   LET time_mask = time_mask1* (IF L_indx LE nn THEN L_indx)
   LET nmsk = MAX(1, `time_mask[L=@ngd]`)
   LET L_indx_T = COMPRESSL(time_mask)

! Sample the variable at only the months that will be used in the avgs.
   LET S($num)_seas_months = SAMPLEL(S($num)_the_plot_var,L_indx_T[l=1:`nmsk`])
   LET tsample = SAMPLEL(tt,L_indx_T[l=1:`nmsk`])
   LOAD tt
   LOAD L_indx_T[l=1:`nmsk`]
   DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` taxis_sampled = tsample
   LET S($num)_to_average = S($num)_seas_months[gt=taxis_sampled@ASN]

! Index list, once per year on the correct month

   IF `($loffset) LT 0` THEN DEFINE SYMBOL loffset = `($loffset) + 12`
   IF ($ferret_expand_time"0") THEN  
      LET L1 = 1+INT(season_length/2) 
   ELSE 
      LET L1 = MOD(`1+INT(season_length/2) + ($loffset)`,12)
      LET L1 = MOD(`INT(season_length/2) + ($loffset)-1`,12)
   ENDIF
   DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` timeax_years = tsample[L=`L1`:`NMSK`:($ferret_season_length)]

   IF `nmsk eq 1` THEN  
      LET L0 = MAX(`L1-1`,1)
      LET L2 = MIN(`L1+1`, `lmax`)
      DEFINE AXIS/T/T0="`tt,RETURN=t0`"/UNITS=`tt,RETURN=tunits` timeax_years = tsample[L=`L0`:`L2`:($ferret_season_length)]
   ENDIF

! Average from the n-Month-per-year axis to once per year.
! Weight by the box sizes from the original time axis.

   LET boxes = tbox[gt=tt]
   LET boxes_sampled = SAMPLEL(boxes,L_indx_T[l=1:`nmsk`])
   LET weights = boxes_sampled[gt=taxis_sampled@ASN]
   LET S($num)_mask = IF S($num)_to_average THEN 1
   LET S($num)_weights2D = S($num)_mask * boxes_sampled

   LET S($num)_weighted = S($num)_to_average*S($num)_weights2D
   LET S($num)_sum = S($num)_weighted[GT=timeax_years@SUM]
   LET S($num)_weight_sum = S($num)_weights2D[GT=timeax_years@SUM]
   LET S($num)_seas_per_year = S($num)_sum/S($num)_weight_sum 

   DEFINE SYMBOL ferret_plot_var S($num)_seas_per_year
   IF ($single_time"0|*>1") THEN DEFINE SYMBOL ferret_plot_var S($num)_seas_per_year[($region_t)]
   DEFINE SYMBOL ferret_plot_var_noregion S($num)_seas_per_year[($region_t)]

! Add information to the title
   DEFINE SYMBOL ferret_plot_title ($ferret_plot_title) (($ferret_season_length)-month ave, Centered ($mon1))
   DEFINE SYMBOL data_var_transform = , (($ferret_season_length)-month ave, Centered ($mon1))

ENDIF   ! Season length longer than 1

! End of $RCSfile ------------transform_1_season_per_year.jnl-------------------------------

pause

