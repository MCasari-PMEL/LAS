!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $Header$
! Trajectory_initialize_cruise.jnl
!
! Define variables and symbols based on cruise identification variables
! in the SOCAT database:
!
! cruise_ID     -- unique identifier for each cruise

!acm 2/2009 Additions to the symbol definitions at the end to
!           allow for null strings: replace these with "none"

! Cancel the XY region.   These limits have nothing to do with the 
! I and J axes of the intermediate data file.

SET MEM/siz=200

DEFINE REGION/DEFAULT cruise_temp_region
CANCEL REGION

! Create the 'cruise_evnt' variable which increments for each new cruise.

! NOTE:  The calculation of individual cruises only works if the 
! NOTE:  intermediate netCDF files is ordered by cruise_ID.  Make sure that
! NOTE:  the SQL query ends with:  'ORDER BY cruise_ID'.

DEFINE SYMBOL cruise_max_labels = 200
DEFINE SYMBOL numobs `($data_var),return = isize`
LET num_e = `($data_var),return = msize`

IF `num_e GT ($numobs)` THEN DEFINE SYMBOL numobs = `num_e`

! Are the rowsize variables in the E direction?
DEFINE SYMBOL rdir = `rowsize,RETURN=shape` 
DEFINE SYMBOL rind = ($rdir"|X>I|E>M|POINT>M")

! If (for prop-prop plots) there are mask-by settings, apply them

let nmask_labels = 0
GO Trajectory_mask_by_var ($data_var)


LET n_subset = `rowsize,RETURN=msize`
DEFINE AXIS/X=1:`n_subset`:1 xmask_axis

IF `nmask_labels GT 0` THEN
   LET dvar_to_mask = ($data_var)
   DEFINE SYMBOL data_var = mask_on_var* dvar_to_mask
ENDIF


IF `($numobs) EQ 1` THEN
   LET ncruises = 1
   DEFINE SYMBOL cruise_max = 1
   
   LET cruise_numbers = i[gx=xmask_axis]
   LET cruise_mask = 1 + 0*cruise_numbers

   LET longest = 1

   LET data_var_z =  EXPNDI_BY_Z_COUNTS(($data_var), xsequence(rowsize),`longest`)

   LET cruise_n = x[i=1:1]
   LET subset_mask = x[i=1:1]

ELSE
   LET ncruises = 1
   IF `($rind"0|I>1|*>0")` THEN LET ncruises = `rowsize,RETURN=isize`
   IF `($rind"0|M>1|*>0")` THEN LET ncruises = `rowsize,RETURN=msize`
   LET cruise_numbers = i[gx=xmask_axis]
   LET cruise_mask = 1 + 0*cruise_numbers  ! may redefine later

   DEF SYM cruise_max = `ncruises`

   LET longest = rowsize[($rind)=@max]+2

   LET data_var_z =  EXPNDI_BY_Z_COUNTS(($data_var), xsequence(rowsize),`longest`)

! If  a subset of cruise ids is given then plot only those on a Prop/Prop 
! plot, but using the symbols and colors as determined by the whole dataset.

! Format the cruise list and define the mask.  Do this just once - 
! Once the all_subset is defined then the list mask is all set.

   IF ($ferret_cruise_list"0|*>1") THEN

      IF ($all_subset"1|*>0") THEN

         LET all_len = STRLEN("($ferret_cruise_list)")
         LET subset_len = `all_len`

! Initialize, first cruise id in symbol all_subset

         DEFINE SYMBOL subset_list = ($ferret_cruise_list)
         LET s1 = 1
         LET s2 =  `STRINDEX("($subset_list)", ",")`
         IF `s2 EQ 0` THEN LET s2 = subset_len+1
         DEFINE SYMBOL one_cruise = "`SUBSTRING("($subset_list)", 1,s2-1)`"
         DEFINE SYMBOl all_subset = ($one_cruise)
         DEFINE SYMBOL subset_list= ($all_subset)
         IF `s2 NE 0` THEN 
            LET s1 = `s1+s2`
            IF `s1 LT all_len` THEN 
	     DEFINE SYMBOL subset_list= `SUBSTRING("($ferret_cruise_list)",s1,subset_len-s2)`
             LET subset_len = STRLEN("($subset_list)")
	    ENDIF
         ENDIF

! If more in the list, add them.

         IF `(s2 NE 0) AND (s1 LT all_len)` THEN
            REPEAT/RANGE=1:200 ( ;\
              LET s2 =  `STRINDEX("($subset_list)", ",")`;\
              IF `s2 EQ 0` THEN LET s2 = subset_len+1;\
              DEFINE SYMBOL one_cruise = "`SUBSTRING("($subset_list)", 1,s2-1)`";\
	      DEFINE SYMBOl all_subset = ($all_subset),($one_cruise);\
	      IF `s2 EQ 0` THEN EXIT/LOOP;\
	      LET s1 = `s1+s2`;\
	      IF `s1 GE all_len` THEN EXIT/LOOP;\
              DEFINE SYMBOL subset_list= `SUBSTRING("($ferret_cruise_list)",s1,subset_len-s2)`;\
	      LET subset_len = STRLEN("($subset_list)");\
	      )
         ENDIF

         LET subset_ids = {($all_subset)}

! Define a mask to use on the entire list of values: plot or not to plot
! the polygons on the prop-prop plot.
         list varnames
   
         IF `IS_ELEMENT_OF_STR_N(varnames, "($trajectory_variable)") NE 0` THEN 
            LET subm_ids = IF ELEMENT_INDEX_STR_N(($trajectory_variable), subset_ids) GT 0 THEN 1
! apply mask as data_var_z* subset_mask
            LET subset_mask = XSEQUENCE(subm_ids) + 0*i[gx=xmask_axis]  ! put it on a non-abstract axis

            DEFINE SYMBOL cruises_shown = `n_subset`
         ELSE
   
            LET n_subset = `rowsize,RETURN=msize`
            LET subset_mask = 1 + 0*i[i=1:`n_subset`]
         ENDIF

      ENDIF  ! all_subset defined

      DEFINE SYMBOL subset_mask = 1
      LET cruise_mask = subset_mask  ! used in the key when color-by-cruise

   ENDIF     ! ferret_cruise_list defined

ENDIF

! For SOCAT server labels, make time symbols w/o the trailing 00:00:00

IF ($region_0_t_lo"0|*>1") THEN
   DEFINE SYMBOL t_lab_lo = ($region_0_t_lo)
   LET iz = STRINDEX("($region_0_t_lo)", " 00:00:00")
   IF `iz GT 0` THEN 
      DEFINE SYMBOL t_lab_lo = `SUBSTRING("($region_0_t_lo)", 1, iz-1)`
   ELSE
      LET iz = STRINDEX("($region_0_t_lo)", ":00:00")
      IF `iz GT 0` THEN DEFINE SYMBOL t_lab_lo = `SUBSTRING("($region_0_t_lo)", 1, iz-1)`
   ENDIF
ENDIF 

IF `STRCMP("($region_0_t_lo)", "($region_0_t_hi)") EQ 0` THEN  EXIT/SCRIPT

IF ($region_0_t_hi"0|*>1") THEN
   DEFINE SYMBOL t_lab_hi = ($region_0_t_hi)
   LET iz = STRINDEX("($region_0_t_hi)", " 00:00:00")
   IF `iz GT 0` THEN 
      DEFINE SYMBOL t_lab_hi = `SUBSTRING("($region_0_t_hi)", 1, iz-1)`
   ELSE
      LET iz = STRINDEX("($region_0_t_hi)", ":00:00")
      IF `iz GT 0` THEN DEFINE SYMBOL t_lab_hi = `SUBSTRING("($region_0_t_hi)", 1, iz-1)`
   ENDIF
ENDIF

!---------------- end of Trajectory_initialize_cruise.jnl -------------------------
