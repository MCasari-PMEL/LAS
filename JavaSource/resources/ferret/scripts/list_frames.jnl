!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $RCSfile: list_frames.jnl,v $
!
! $Author: Jing Y. Li $
! $Date: 2007/08/22
!
! list_frames.jnl creates a listing in XML format for animation
! Assumes symbol ferret_listing is the output file.
! The listing file includes: 
! - fill_levels      for 2D contour
! - dep_axis_scale   for 1D plot
! - hasT             used to determine if the dataset has time axis
! - units            units of the time axis
! - resolution       resolution of time frames
! - frames           list of each individual time points

GO LAS_initialize_region 0
GO LAS_initialize_data 0

! Here is the variable we will list out, with the region specified.
DEFINE SYMBOL ferret_list_var = ($ferret_plot_var)

DEFINE SYMBOL imin `($ferret_list_var),return=xstart`
DEFINE SYMBOL imax `($ferret_list_var),return=iend`
DEFINE SYMBOL isize `($ferret_list_var),return=isize`
DEFINE SYMBOL jmin `($ferret_list_var),return=jstart`
DEFINE SYMBOL jmax `($ferret_list_var),return=jend`
DEFINE SYMBOL jsize `($ferret_list_var),return=jsize`
DEFINE SYMBOL kmin `($ferret_list_var),return=kstart`
DEFINE SYMBOL kmax `($ferret_list_var),return=kend`
DEFINE SYMBOL ksize `($ferret_list_var),return=ksize`
DEFINE SYMBOL lmin `($ferret_list_var),return=lstart`
DEFINE SYMBOL lmax `($ferret_list_var),return=lend`
DEFINE SYMBOL lsize `($ferret_list_var),return=lsize`


!compute color fill levels if not given
LET the_var = ($ferret_plot_var)
IF `($ferret_fill_levels"1|*>0") OR ($ferret_dep_axis_scale"1|*>0")` THEN
    LOAD the_var
    LET vmin = the_var[x=@min,y=@min,z=@min,t=@min]
    LET vmax = the_var[x=@max,y=@max,z=@max,t=@max]
    PPL %RANGE `vmin,p=9` `vmax,p=9` 10
    DEFINE SYMBOL lo_lim ($PPL$RANGE_LOW)
    DEFINE SYMBOL hi_lim ($PPL$RANGE_HIGH)
    DEFINE SYMBOL delta ($PPL$RANGE_INC)

    IF ($ferret_fill_levels"1|*>0") THEN
        DEFINE SYMBOL ferret_fill_levels (($PPL$RANGE_LOW),($PPL$RANGE_HIGH),($PPL$RANGE_INC))
    ENDIF

    IF ($ferret_dep_axis_scale"1|*>0") THEN
        DEFINE SYMBOL ferret_dep_axis_scale ($PPL$RANGE_LOW),($PPL$RANGE_HIGH),($PPL$RANGE_INC)
    ENDIF
ENDIF

SET LIST/FILE="($result_ferret_listing_filename)"

DEFINE SYMBOL hasT = 1

!-----------------------------------------
!for animation on XY view 
!-----------------------------------------
!- only a single time ponit was selected
!- or, there is not time axis at all

! max_tpoints is the arbitrary size limit of the time range
! 21 might be a good value for an animation
! 251 might be a good value for a time series plot
DEFINE SYMBOL max_tpoints 21   ! should be an odd number

! Determine a new time range if just a single point requested
DEFINE SYMBOL nt `($ferret_plot_var),return=lsize`   ! no. of time points requested
IF `($nt) eq 1` THEN
    LET L0 = `($ferret_plot_var),return=lstart`
  
    IF `L0 EQ 0` THEN
        DEFINE SYMBOL hasT = 0
    ENDIF

    !  CANCEL REGION/T
    LET maxL = `($data_var),return=lsize`   ! no. of time points total
    LET hafmax = `INT(($max_tpoints)/2)`
    IF `maxL LE ($max_tpoints)` THEN
        DEFINE SYMBOL lmin 1
        DEFINE SYMBOL lmax `maxL`
     ELSE
        DEFINE SYMBOL lmin `MAX(L0-hafmax,1)`
        DEFINE SYMBOL lmax `MIN(L0+hafmax,maxL)`
     ENDIF
     !SET REGION/T="`($data_var)[L=($lmin)],return=TSTART`":"`($data_var)[L=($lmax)],return=TEND`"
     DEFINE SYMBOL region_t = T="`($data_var)[L=($lmin)],return=TSTART`":"`($data_var)[L=($lmax)],return=TEND`"
     DEFINE SYMBOL region_xyzt = ($region_xyz),($region_t)
     DEFINE SYMBOL region_full = ($region_xyzt)
     DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),($region_full)]
ENDIF

DEFINE SYMBOL ferret_list_var = ($ferret_plot_var)

!----------------------------------------
! start writing to the file
!----------------------------------------
LET xmlhead = "<?xml version='1.0' encoding='UTF-8'?>"
define variable len = STRLEN(xmlhead)
define symbol fmt = A`len`
list/nohead/format=(($fmt))/FILE/append xmlhead

LET framesStart = "<lasAnimation>"
define variable len = STRLEN(framesStart)
define symbol fmt = A`len`
list/nohead/format=(($fmt))/FILE/append framesStart

!------------
! fill_levels
!------------
LET f = "<fill_levels>"
list/norowhead/nohead/format=(A13)/FILE/append f

let nlen = strlen ("($ferret_fill_levels)")
let a = "($ferret_fill_levels)"
list/norowhead/nohead/format=(A`nlen`)/FILE/append a

LET f = "</fill_levels>"
list/norowhead/nohead/format=(A14)/FILE/append f

!---------------
! dep_axis_scale
!---------------
LET f = "<dep_axis_scale>"
list/norowhead/nohead/format=(A16)/FILE/append f

let nlen = strlen ("($ferret_dep_axis_scale)")
let a = "($ferret_dep_axis_scale)"
list/norowhead/nohead/format=(A`nlen`)/FILE/append a

LET f = "</dep_axis_scale>"
list/norowhead/nohead/format=(A17)/FILE/append f

!------------
! hasT
!------------
LET f = "<hasT>"
list/norowhead/nohead/format=(A6)/FILE/append f

let nlen = strlen ("($hasT)")
let a = "($hasT)"
list/norowhead/nohead/format=(A`nlen`)/FILE/append a

LET f = "</hasT>"
list/norowhead/nohead/format=(A7)/FILE/append f

! ouput individual time points

DEFINE SYMBOL time_units = `tax_units(t[gt=($ferret_list_var),L=1])`

!---------------------
! time unit in seconds
!---------------------
IF `strcmp("($time_units)", "1") EQ 0` THEN
    !====>output time units
    LET f = "<units>seconds</units>"
    list/norowhead/nohead/format=(A22)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "seconds")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "seconds")

ELIF `strcmp("($time_units)", "60") EQ 0` THEN
    !====>output time units
    LET f = "<units>minutes</units>"
    list/norowhead/nohead/format=(A22)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "minutes")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "minutes")

    !====>TODO: need to compute time resolution

    LET f = "</frames>"
    list/norowhead/nohead/format=(A9)/FILE/append f

!--------------------
! time unit in hours
!--------------------
ELIF `strcmp("($time_units)", "3600") EQ 0` THEN
    !====>output time units
    LET f = "<units>hours</units>"
    list/norowhead/nohead/format=(A20)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "hours")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "hours")

    !====>compute time resolution
    !--->get difference between two adjacent time points
    let interval = t[gt=($ferret_list_var), L=2]-t[gt=($ferret_list_var), L=1]
    !--->annual
    IF `interval LE 8780  AND interval GT 2880` THEN
        define symbol time_resolution = "years"
    ENDIF
    !--->monthly
    IF `interval LT 1440 AND interval GT 24` THEN
        define symbol time_resolution = "months"
    ENDIF    
    !--->daily
    IF `interval EQ 24` THEN
        define symbol time_resolution = "days"
    ENDIF
    !--->hourly
    IF `interval EQ 1` THEN
        define symbol time_resolution = "hours"
    ENDIF

    LET f = "</frames>"
    list/norowhead/nohead/format=(A9)/FILE/append f

!--------------------
! time unit in days
!--------------------
ELIF `strcmp("($time_units)", "86400") EQ 0` THEN
    !====>output time units
    LET f = "<units>days</units>"
    list/norowhead/nohead/format=(A19)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "days")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "days")

    !====>compute time resolution
    !--->get difference between two adjacent time points
    let interval = t[gt=($ferret_list_var), L=2]-t[gt=($ferret_list_var), L=1]
    !--->annual
    IF `interval LE 366 AND interval GT 120` THEN
        define symbol time_resolution = "years"
    ENDIF
    !--->monthly 
    IF `interval LT 60 AND interval GT 1` THEN
        define symbol time_resolution = "months"
    ENDIF
    !--->daily
    IF `interval EQ 1` THEN
        define symbol time_resolution = "days"
    ENDIF
 
    LET f = "</frames>"
    list/norowhead/nohead/format=(A9)/FILE/append f

!--------------------
! time unit in months
!--------------------
ELIF `strcmp("($time_units)", "2629746") EQ 0` THEN
    !====>output time units
    LET f = "<units>months</units>"
    list/norowhead/nohead/format=(A21)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "months")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "months")

    !====>TODO: need to compute time resolution 
    !====>compute time resolution
    !--->get difference between two adjacent time points
    let interval = t[gt=($ferret_list_var), L=2]-t[gt=($ferret_list_var), L=1]
    !--->annual
    IF `interval EQ 12` THEN
        define symbol time_resolution = "years"
    ENDIF
    !--->monthly
    IF `interval EQ 1` THEN
        define symbol time_resolution = "months"
    ENDIF

    LET f = "</frames>"
    list/norowhead/nohead/format=(A9)/FILE/append f

!------------------
!time unit in years
!------------------
ELIF `strcmp("($time_units)", "31536000") EQ 0` THEN
    !====>output time units
    LET f = "<units>years</units>"
    list/norowhead/nohead/format=(A20)/FILE/append f

    LET f = "<frames>"
    list/norowhead/nohead/format=(A8)/FILE/append f

    !====>output time frames
    define symbol first_time = `tax_datestring(t[gt=($ferret_list_var),L=1], t[gt=($ferret_list_var)], "years")`
    let nlen = strlen ("($first_time)")
    list/norowhead/nohead/format=("<frame>",A`nlen`,"</frame>")/FILE/append tax_datestring(t[gt=($ferret_list_var),L=($lmin):($lmax)], t[gt=($ferret_list_var)], "years")

    !====>TODO: need to compute time resolution
    let interval = t[gt=($ferret_list_var), L=2]-t[gt=($ferret_list_var), L=1]
    IF `interval EQ 1` THEN
        define symbol time_resolution = "years"
    ENDIF

    LET f = "</frames>"
    list/norowhead/nohead/format=(A9)/FILE/append f

ENDIF

!----------------------
! time frame resolution
!----------------------
IF ($time_resolution"0|*>1") THEN
    LET f = "<resolution>"
    list/norowhead/nohead/format=(A12)/FILE/append f

    let nlen = strlen (($time_resolution))
    let a = ($time_resolution)
    list/norowhead/nohead/format=(A`nlen`)/FILE/append a

    LET f = "</resolution>"
    list/norowhead/nohead/format=(A13)/FILE/append f
ENDIF

!--------------------------------------------------
! compute and output image size
SET WINDOW/SIZE = ($ferret_size"0.5")
!shade/l=1 ($ferret_list_var)

!let xsize = "($ppl$xpixel)"
!let nlen = strlen (xsize)
!list/norowhead/nohead/format=("<x_image_size>",A3,"</x_image_size>")/FILE/append xsize

!let ysize = "($ppl$ypixel)"
!let nlen = strlen (ysize)
!list/norowhead/nohead/format=("<y_image_size>",A3,"</y_image_size>")/FILE/append ysize 

LET framesEnd = "</lasAnimation>"
list/nohead/format=(A15)/FILE/append framesEnd

