!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! prop_prop_plot.jnl
! 
! $Author: ansley $
! $Date: 11-Jan-2008
! 7/2010    ACM updates for V7.2 multi-variable plots

! prop_prop_plot.jnl creates a property-property plot, using the 
! data variable in symbol data_0_var and the second variable from
! data_1_var, with its own full definition.

! The scatter plot is drawn using polygons, with options sent in for
! symbol_color, symbol_shape, and symbol_size.

! NOTE If the two variables are going to have DIFFERENT region setregretings,
! changes will need to be made to annotate that info on the plot.

set mode ver:always
!
! Set the gif filename, changing it from .gif to the name from this request
GO LAS_reset_gifname

DEF SYM its_prop_plot = 1

! For LAS v8.0 relese, dont take into account any of these Ferret properties.
! This is a workaround for items 3 and 4 in ticket 1388; the issues will be 
! revisited in LAS 8.1 see ticket 1390.

CANCEL SYMBOL ferret_fill_levels
CANCEL SYMBOL ferret_contour_levels
CANCEL SYMBOL ferret_palette

! Initialize data and variables
! Set up masks for constraints
! The plot variables ($xvar), ($yvar), and optional color-by ($zvar) are defined.

GO setup_prop_prop

! Plot qualifiers (graticule lines etc)
GO LAS_set_plot_qualifiers 

! Open the window, apply size, scale options

! dont want to set the aspect ratio using xy region, so reset
! ferret_view temporarily.
DEFINE SYMBOL viewsave = ($ferret_view)
DEFINE SYMBOL ferret_view = aa  

GO LAS_open_window

DEFINE SYMBOL ferret_view = ($viewsave)

! Build up the plot qualifiers

IF ($ferret_use_graticules"0|0|*>1) THEN
  SET MODE GRATICULE:(DASH,COLOR=black)
ENDIF

! This is going to be a polygon plot. Options for color, shape, size.

DEFINE SYMBOL polycolor = ($ferret_symbol_color%black|default>black|black|red|blue|green|lightblue|purple|*>blue%)

DEFINE SYMBOL polysize = ($ferret_symbol_size%0.6|default>*0.6|*%)

DEFINE SYMBOL polyshape = ($ferret_symbol_shape%triangle|default>triangle|triangle|delta\
|square|diamond|pentagon|hexagon|circle|star|plus|ex|*>triangle%)

DEFINE SYMBOL ferret_plot_title = " "

! Set the plot argument. 
DEFINE SYMBOL plot_arg = ($xvar), ($yvar)

! The underlying plot is a PLOT/VS
DEFINE SYMBOL qualifiers = ($qualifiers)/VS/color=8

! Expand the horizontal and vertical scale a bit data is not on top of
! the plot axes.

DEFINE SYMBOL nx = `nx_var`

IF `STRCMP("($nx)", "bad") NE 0 AND STRCMP("($nx)", "0") NE 0` THEN
   STAT ($xvar)
   PPL %RANGE `($stat_min)`, `($stat_max)`, 10
ELSE
   PPL %RANGE `($region_0_x_lo)`, `($region_0_x_hi)`, 10
ENDIF

IF `($ppl$range_high) EQ ($ppl$range_low)`  THEN 
   DEFINE SYMBOL ppl$range_low = `($ppl$range_low) - 1`
   DEFINE SYMBOL ppl$range_high = `($ppl$range_high) + 1`
   DEFINE SYMBOL ppl$range_inc = 1
ENDIF
DEFINE SYMBOL ferret_indep_axis_scale ($ppl$range_low),($ppl$range_high),($ppl$range_inc)
DEFINE SYMBOL qualifiers ($qualifiers)/HLIM=($ppl$range_low):($ppl$range_high)

IF `STRCMP("($nx)", "bad") NE 0 AND STRCMP("($nx)", "0") NE 0` THEN
   STAT ($yvar)
   PPL %RANGE `($stat_min)`, `($stat_may)`, 10
ELSE
   PPL %RANGE `($region_0_y_lo)`, `($region_0_y_hi)`, 10
ENDIF

IF `($ppl$range_high) EQ ($ppl$range_low)`  THEN 
   DEFINE SYMBOL ppl$range_low = `($ppl$range_low) - 1`
   DEFINE SYMBOL ppl$range_high = `($ppl$range_high) + 1`
   DEFINE SYMBOL ppl$range_inc = 1
ENDIF
DEFINE SYMBOL ferret_dep_axis_scale ($ppl$range_low),($ppl$range_high),($ppl$range_inc)
DEFINE SYMBOL qualifiers ($qualifiers)/VLIM=($ppl$range_low):($ppl$range_high)

DEFINE SYMBOL qualifiers ($qualifiers)/NOKEY/NOLAB

! add any constraint labels in the lower left.
IF `($ferret_annotations%0|*>1%) EQ 0` THEN

   IF `($nmask_labels"0|*>1") EQ 0` THEN DEFINE SYMBOL nmask_labels = 1
   DEFINE SYMBOL label_y = `-0.95*($ppl$yorg) + 0.2*(($nmask_labels)-1)`

   DEFINE SYMBOL label_x = `-0.95*($ppl$xorg)`
   DEFINE SYMBOL label_y = `-0.95*($ppl$yorg) + 0.2*(($nmask_labels)-1)`

   REPEAT/RANGE=1:`($nmask_labels)`:1/NAME=m (\
      DEFINE SYMBOL mmask = `m`;\
      IF ($mask_title_($mmask)"0|*>1) THEN ; \
        LABEL/NOUSER `($label_x)`, `($label_y)`, -1, 0, 0.12, ($mask_title_($mmask)) ; \
        DEFINE SYMBOL label_y = `($label_y) - 0.2`; \
      ENDIF)
ENDIF

   ! Formatting of lon, lat, time axes if appropriate
LET p = ($xvar) 
LET q = ($yvar)
   
DEFINE SYMBOL data_prop_var = ($data_0_var)
DEFINE SYMBOL ferret_prop_var = ($ferret_plot_var_0)
DEFINE SYMBOL ferret_plot_var = ($ferret_plot_var_1)
IF `STRINDEX( UPCASE("($data_0_var)"), "TIME") GT 0` THEN DEFINE SYMBOL tunits = ($data_0_units)
IF `STRINDEX( UPCASE("($data_1_var)"), "TIME") GT 0` THEN DEFINE SYMBOL tunits = ($data_1_units)

GO LAS_xytvar_setup

! Polygon plot

DEFINE SYMBOL plot_arg = ($xvar), ($yvar), 0
IF `($data_count"0") GT 2` THEN DEFINE SYMBOL plot_arg = ($xvar), ($yvar), ($zvar)

DEFINE SYMBOL poly_qual = /OVER/NOLAB

IF ($color_by_traj"0|*>1") THEN 
   GO LAS_pp_colorby_traj

ELSE
   IF ($color_by"0|*>1") THEN 

! Get color-plot qualifiers
      IF ($ferret_fill_levels"0|*>1") THEN 
         DEFINE SYMBOL poly_qual = ($poly_qual)/LEVELS=($ferret_fill_levels)
      ELSE
         DEFINE SYMBOL poly_qual = ($poly_qual)/LEVELS=v
      ENDIF
   
      IF ($ferret_plot_key"0|0|nokey>1|*>0") THEN 
         DEFINE SYMBOL poly_qual = ($poly_qual)/NOKEY
      ELSE
         DEFINE SYMBOL poly_qual = ($poly_qual)/KEY
      ENDIF
   
! Dont use the palette coming in. Its for variable 0
      DEFINE SYMBOL poly_qual = ($poly_qual)/PALETTE=($ferret_palette"rainbow|default>rainbow|*>*)
!      IF `($its_trajectory_corr"0|*>1") EQ 0` THEN DEFINE SYMBOL poly_qual = ($poly_qual)/PALETTE=rainbow
      DEFINE SYMBOL color_by_title = `($zvar),RETURN=title`
   ELSE
      DEFINE SYMBOL poly_qual = ($poly_qual)/palette=($polycolor)
   ENDIF
   
   
   IF `($ferret_annotations%0|*>1%) EQ 0` THEN
      LABEL/NOUSER `($ppl$xlen)/2`, -0.6, 0, 0, 0.14 ($ferret_title_0)
      LABEL/NOUSER -0.8, `($ppl$ylen)/2`, 0, 90, 0.14 ($ferret_title_1)
   ENDIF
   
   DEFINE SYMBOL poly_qual = ($poly_qual)/OVER/SET

   DEFINE SYMBOL poly_command POLYGON($poly_qual)

   GO polymark ($poly_command) ($plot_arg), ($polyshape), ($polysize)
   IF ($ferret_annotations%0|*>1%) THEN GO key_at_top
   PPL POLYGON

ENDIF  ! color-by-trajectory or not...


IF `($color_by_title"0|*>1") AND ($ferret_annotations%0|*>1%) EQ 0` THEN \ 
 LABEL/NOUSER `($ppl$width)-($ppl$xorg)-0.2`, -0.7, 1, 0, 0.12 Colored by <NL>($color_by_title)

! Add the linear fit information
! Gaps in p and qhat mean that just plotting p, qhat
! may result in a gappy or invisible line. Plot between the
! first and last good point instead.

! variables for the regression line

LET p = ($xvar)  ! for regression line
LET q = ($yvar)
LET do_rsquare = 1

DEFINE SYMBOL  line_color = blue  ! regression line
IF ($polycolor%0|blue>1|*>0%) THEN DEFINE SYMBOL  line_color = red

GO LAS_regressx

IF `(p[x=@NGD] LE 1) OR (qhat[x=@NGD] LE 1)` THEN DEFINE SYMBOL do_rsquare = 0

! Note do_rsquare is set in LAS_xytvar_setup, where plots with time, lon, or 
! lat axes are set to NOT draw the regression line.
IF ($do_rsquare"1|0|*>1) THEN 

! Note that qhat in the regress script is defined as
!   LET qhat = slope*p + intercep
! If one of p or q has lots of missing values this can look wierd

   LET qhatmasked = slope*pmasked + intercep

   LET pminmax = MINMAX(pmasked)
   LOAD pminmax
   LET p1 = `pminmax[i=1]`
   LET p2 = `pminmax[i=2]`

   LET qminmax = MINMAX(qhatmasked)
   LOAD qminmax
   LET q1 = `qminmax[i=1]`
   LET q2 = `qminmax[i=2]`

   IF `slope LT 0` THEN 
     LET qtmp = `q2`
     LET q2 = `q1`
     LET q1 = `qtmp`
   ENDIF

   PLOT/VS/OVER/NOLAB/LINE/THICK=2/color=($line_color) {`p1`,`p2`}, {`q1`,`q2`}

! Label the rsquare and slope of the line. Put this above the plot, 
! or for annotated plots, below it.
   IF `rsquare` THEN
      IF ($ferret_annotations"0|*>1") THEN
         DEFINE SYMBOL rsqlab = R^2 = `rsquare,P=3`
         LET wid = `LABWID("($rsqlab)", 0.1)`
         LABEL/NOUSER -0.5,-0.32,-1, 0, 0.10, @P4@DRR^2 = `rsquare,P=3`
         LABEL/NOUSER -0.5,-0.50,-1, 0, 0.10, @P4@DRSlope = `slope,P=3`
      ELSE
         LABEL/NOUSER `($ppl$xlen)-0.2`,`($ppl$ylen)+0.25`,1, 0, 0.10, @P4@DRR^2 = `rsquare,P=3`
         LABEL/NOUSER `($ppl$xlen)-0.2`,`($ppl$ylen)+0.1`,1, 0, 0.10, @P4@DRSlope = `slope,P=3`
      ENDIF
   ENDIF

ENDIF

! notation with number of cruises and obs.
GO Trajectory_label_cruise_pts

! set up any constraint labels
GO set_constraint_labels

! Add labels at the top of the plot

GO LAS_url_label 0
IF `($n_right_labels"0") GT 0 OR ($n_left_labels"0") GT 0` THEN GO labels_above_plot

! Overall header at the very top
GO LAS_ferret_las_version_header

! If it's a color-by-ID plot, make the webrowset file for the cruise key
IF `color_by_traj EQ 1` THEN GO Trajectory_cruise_key

! Save the results

GO LAS_results box

! ----- End of prop_prop_plot.jnl ------------------------------------------------

