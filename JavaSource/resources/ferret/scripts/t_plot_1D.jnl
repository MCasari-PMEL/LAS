!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! $RCSfile: t_plot_1D.jnl,v $
! $Revision: 1.6 $
! 
! $Author: ansley $
! $Date: 2006/07/11 22:40:08 $
! 3/7/2007: ACM. Put code to check that the region was not too small, resulting 
!           in degenerate plot into LAS_initialize_data.jnl rather than in the 
!           individual plot scripts.
! 3/29/2007 ACM Fix logic interpreting contents of ferret_interpolate_data 

!
! T_plot.jnl creates a T line plot for use with the Back End Server
! code that sits behind a Live Access Server (LAS). 
!
! NOTE:  This code handles overlays but not differencing.
!
! TODO:  We should support user choice of the 'base layer' variable.
! TODO:  From the Ferret script writers' perspective it would be nice
! TODO:  if this were handled in the UI so that ($data_0_...) always
! TODO:  referred to the base layer.


! Set any Ferret modes
!
! NOTE:  Should we support any of the following Ferrt modes?
! NOTE:    ASCII_FONT, CALENDAR, DEPTH_LABEL, LABELS, LATIT_LABEL, LONG_LABEL 

IF ($ferret_interpolate_data%0|false>0|true>1|1|0|*>1%) THEN SET MODE INTERPOLATE

DEFINE SYMBOL fview = `UPCASE("($ferret_view)")`


! Define symbols associated with the regiogn and data and perform any
! initialization needed for this dataset.
!
! NOTE:  Adding support for a 'base layer' variable would mean passing
! NOTE:  some other argument.  For now, though, we always use 'data_0'
! NOTE:  for the base layer and region.

GO LAS_initialize_region 0
GO LAS_initialize_data 0

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Check whether the region is too small; reduces to a single grid point.
! (Region is a point)
GO LAS_check_1d_region

! Check for errors 
IF ($error_status"0|ERROR>1") THEN
  MESSAGE/ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Here is variable 0 title
DEFINE SYMBOL ferret_title_0 = ($ferret_plot_title"($data_var)")

! Open the window, apply size, scale options
GO LAS_open_window

! TODO:  Should the creation of the ($qualifiers) symbol for standard
! TODO:  1D plots be separated out int a separate script called:
! TODO:    LAS_1D_plot_qualifiers.jnl
!
! Build up the plot qualifiers

IF ($ferret_use_graticules"1|0|*>1) THEN
  SET MODE GRATICULE:(DASH,COLOR=black)
ENDIF

! Line color

IF `($ferret_line_color%0|default>0|*>1%)` THEN
  DEFINE SYMBOL qualifiers = ($qualifiers)/COLOR=($ferret_line_color%0|default>black|red|blue|green|lightblue|purple|*>black%)
ENDIF

! line thickness

DEFINE SYMBOL plotsymbol = 25
IF `($ferret_line_thickness%0|default>1|*>1%)` THEN
   DEFINE SYMBOL qualifiers = ($qualifiers)($ferret_line_thickness%/THICK=1|default>/THICK=1|1>/THICK=1|2>/THICK=2|3>/THICK=3|*>/THICK=1%)
   IF `($ferret_line_thickness%1|1|2|3|*>1%) EQ 2` THEN DEFINE SYMBOL plotsymbol = 25/SIZ=0.12
   IF `($ferret_line_thickness%1|1|2|3|*>1%) EQ 3` THEN DEFINE SYMBOL plotsymbol = 27/SIZ=0.15
ENDIF

! symbols

IF `($ferret_line_or_sym%0|default>1|*>1%)` THEN
   DEFINE SYMBOL qualifiers = ($qualifiers)($ferret_line_or_sym%/LINE|default>/LINE|line>/LINE|both>/LINE/SYM=($plotsymbol)|sym>/SYM=($plotsymbol)%)
ENDIF

! Set the plot argument. If there are multiple variables, plot them
! all at once to get Ferret auto-scaling of the dependent axis.

DEFINE SYMBOL plot_arg = ($ferret_plot_var)
DEFINE SYMBOL plot_title = ($ferret_plot_title)

! Apply any expression only to the first variable not to subsequent ones
CANCEL SYMBOL ferret_expression 

! If the user gave dependent axis scaling, 
! 1) remove any surrounding parentheses
! 2) check for third argument and add it if needed.

IF ($ferret_dep_axis_scale"0|*>1") THEN

  IF `STRINDEX("($ferret_dep_axis_scale)", "(") GT 0` THEN
     LET paren = `STRINDEX("($ferret_dep_axis_scale)", "(")`
     LET slen = `STRLEN("($ferret_dep_axis_scale)")`
     DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", paren+1, slen-1)`
     
     LET paren = `STRINDEX("($ferret_dep_axis_scale)", ")")`
     LET slen = `STRLEN("($ferret_dep_axis_scale)")`
     DEFINE SYMBOL ferret_dep_axis_scale = `SUBSTRING("($ferret_dep_axis_scale)", 1, slen-1)`
  ENDIF

  LET slen = STRLEN("($ferret_dep_axis_scale)")
  LET nc = 0
  REPEAT/RANGE=2:`slen`/NAME=m (let c = `m`; \
     DEFINE SYMBOL next = `SUBSTRING("($ferret_dep_axis_scale)", c, 1)`; sh sym next; \
     IF `STRCMP("($next)", ",") EQ 0` THEN let nc = `nc+1`)

 IF `nc EQ 1` THEN   
     LET c = STRINDEX ("($ferret_dep_axis_scale)", ",")
     DEFINE SYMBOL lo_ax = `SUBSTRING("($ferret_dep_axis_scale)", 1, c-1)`
     DEFINE SYMBOL hi_ax = `SUBSTRING("($ferret_dep_axis_scale)", c+1, slen)`
     PPL %RANGE ($lo_ax), ($hi_ax), 10
     DEFINE SYMBOL ferret_dep_axis_scale = ($ferret_dep_axis_scale),($ppl$range_inc)
  ENDIF

ENDIF

! Draw the plot
IF `($data_count"0") GT 1` THEN
   REPEAT/range=1:`($data_count)-1`/NAME=m (  \
     GO LAS_initialize_region `m` ;  \
     GO LAS_initialize_data  `m` ; \
     DEFINE SYMBOL plot_arg = ($plot_arg),($ferret_plot_var); \
     DEFINE SYMBOL plot_title = ($plot_arg)\
   )

   DEFINE SYMBOL ferret_title_1 = ($ferret_plot_title"($data_var)")
   
   ! Set the title, and the labels for the upper left listing the locations
   ! and time in directions normal to the plot.
   
   GO LAS_set_diff_labels ($fview)
   
   PLOT($qualifiers)/NOKEY/TITLE="($ferret_over_title)"/SET ($plot_arg)
     IF `($labnum_x%0|*>1%)` THEN GO unlabel ($labnum_x)
     IF `($labnum_y%0|*>1%)` THEN GO unlabel ($labnum_y)
     IF `($labnum_z%0|*>1%)` THEN GO unlabel ($labnum_z)
     IF `($labnum_dset%0|*>1%)` THEN GO unlabel ($labnum_dset)
     IF `($labnum_datitl%0|*>1%)` THEN GO unlabel ($labnum_datitl)
     IF `($labnum_dods%0|*>1%)` THEN GO unlabel ($labnum_dods)
     IF `($title_size%0|*>1%)` THEN PPL LABSET ($title_size)
     IF `($ferret_dep_axis_scale"0|*>1")` THEN PPL YAXIS ($ferret_dep_axis_scale)
   PPL PLOT
pause
   GO LAS_url_label `($data_count)-1`
ELSE
   PLOT($qualifiers)/NOKEY/SET/TITLE="($ferret_title_0)" ($plot_arg)
      IF ($xform_dms"0|*>1") THEN PPL XFOR (($xform_dms))
      IF `($ferret_dep_axis_scale"0|*>1")` THEN PPL YAXIS ($ferret_dep_axis_scale)
      IF `($labnum_dset%0|*>1%)` THEN GO unlabel ($labnum_dset)
      IF `($labnum_datitl%0|*>1%)` THEN GO unlabel ($labnum_datitl)
      IF `($labnum_dods%0|*>1%)` THEN GO unlabel ($labnum_dods)
   PPL PLOT
pause
   GO LAS_url_label 0
ENDIF

! Add labels at the top for the location of overlaid lines
! and for URLs if they exist  
IF `($data_count"0") GT 1` THEN
   
   ! Put the labels in the upper left
   
   LET labdel = 0.2
   LET labyloc = `($ppl$ylen) + labdel*($n_left_labels) `
   LET labsiz = 0.1
   
   LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left_1)
   LET labyloc = `labyloc - labdel`
   IF `($n_left_labels) GT 1` THEN LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left_2)
   
   LET labyloc = `labyloc - labdel`
   IF `($n_left_labels) GT 2` THEN LABEL/NOUSER 0, `labyloc`, -1, 0.0, `labsiz`, ($upper_left_3)
   
   ! Put any URL labels in the upper right
   
   IF `($n_right_labels) GT 0` THEN
      LET labxloc = `($ppl$xlen)`
      LET labdel = 0.2
      LET labsiz = 0.1
      LET labyloc = `($ppl$ylen) + labdel*($n_left_labels) `  ! start with loc of left-side labels
      LET labyloc = `labyloc + labdel*($n_right_labels)`
   
      LABEL/NOUSER `labxloc`, `labyloc`, 1, 0.0, `labsiz`, ($upper_right_1)
      LET labyloc = `labyloc - labdel`
      IF `($n_right_labels) GT 1` THEN LABEL/NOUSER `labxloc`, `labyloc`, 1, 0.0, `labsiz`, ($upper_right_2)
   ENDIF 
   
! even for 1 dataset, put URL label on.
ELSE
   IF `($n_right_labels"0") GT 0` THEN GO labels_above_plot

ENDIF

! Overall header at the very top
GO LAS_ferret_las_version_header

! Save the results
GO LAS_results point

! End of $RCSfile -----------------------------------------------------

