! setup_prop_prop.jnl

IF `($data_count"0") LT 2` THEN
  MESSAGE/ERROR **ERROR Expecting two variables, but only received ($data_count)
  EXIT/PROGRAM
ENDIF

DEFINE SYMBOL its_prop_prop_plot = 1  ! used in setting titles and in RESULTS

LET vnames = ..varnames

! Define symbols associated with the region and data and perform any
! initialization needed for this dataset.

! Initialize : These may be reset for e.g. SOCAT dataset where we reformat lablels
! and use Greek letters or subscripting.

LET data_0_title = "($data_0_title)"
LET data_0_units = " (($data_0_units))"
LET data_1_title = "($data_1_title)"
LET data_1_units = " (($data_1_units))"
IF `($data_count"0") GE 3` THEN 
   LET data_2_title = "($data_2_title)"
   LET data_2_units = " (($data_2_units))"
ENDIF

GO LAS_initialize_region 0
GO LAS_initialize_data 0

! Check for errors (They often occur during dataset initialization.)

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Here is variable 0 title 
DEFINE SYMBOL ferret_title_0 = ($ferret_plot_title"($data_0_var)")
IF `(STRINDEX("($ferret_title_0%0%)", "Time") GT 0) AND (STRINDEX("($ferret_title_0%0%)", " since ") GT 0)` THEN \
DEFINE SYMBOL variable_0_lab = Time
DEFINE SYMBOL variable_0_lab = ($ferret_title_0)
LET variable_0_lab = STRCAT(data_0_title, data_0_units)

DEFINE SYMBOL ferret_plot_var_0 = ($ferret_plot_var)

LET/TITLE="($ferret_title_0)" xvar = XSEQUENCE(($ferret_plot_var))

LET nx_var = `($ferret_plot_var_0),return=isize`
LET ny_var = `($ferret_plot_var_0),return=jsize`
LET nz_var = `($ferret_plot_var_0),return=ksize`
LET nt_var = `($ferret_plot_var_0),return=lsize`
LET ne_var = `($ferret_plot_var_0),return=msize`
LET nf_var = `($ferret_plot_var_0),return=nsize`

LET nx_var = `nx_var*ny_var*nz_var*nt_var*ne_var*nf_var`

! Is it a varible on the E axis of a DSG file?

DEFINE SYMBOL vshape = `($ferret_plot_var_0),RETURN=shape`
IF `($vshape"0|E>1|*>0)` THEN

! Is there a rowsize variable?

   IF `IS_ELEMENT_OF_STR_N(vnames, "rowsize") EQ 0` THEN
      MESSAGE/ERROR **ERROR Expecting a RowSize variable in the file, not found
      EXIT/PROGRAM
   ENDIF

! Expand trajectory variable into obs axis
   DEFINE SYMBOL vtype = 0
   DEFINE SYMBOL vtype = `xvar,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0`)

   IF ($is_string"0|*>1") THEN 
      LET xvar = EXPND_BY_LEN_STR(($ferret_plot_var_0), rowsize,`rowsize[m=@sum]`)
      IF ($its_prop_plot"0|*>1") THEN  ! cannot use a string as plot argument
	  LET mvar_0 = _m[ge=($ferret_plot_var_0)]
	  LET xvar = EXPND_BY_LEN(mvar_0, rowsize,`rowsize[m=@sum]`)
       ENDIF
   ELSE
      LET xvar = EXPND_BY_LEN(($ferret_plot_var_0), rowsize,`rowsize[m=@sum]`)
   ENDIF
ENDIF

! Initialize the second variable.
! In fact the region and dataset will be the
! same as for var 0 (for now anyway)

GO LAS_initialize_region 1
GO LAS_initialize_data 1

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR **ERROR ($error_string)
  EXIT/PROGRAM
ENDIF

! Here is variable 1 title 
DEFINE SYMBOL ferret_title_1 = ($ferret_plot_title"($data_1_var)")
IF `(STRINDEX("($ferret_title_1%0%)", "Time") GT 0) AND (STRINDEX("($ferret_title_1%0%)", " since ") GT 0)` THEN \
DEFINE SYMBOL variable_1_lab = Time
DEFINE SYMBOL variable_1_lab = ($ferret_title_1)
LET variable_0_lab = STRCAT(data_1_title, data_1_units)
DEFINE SYMBOL ferret_plot_var_1 = ($ferret_plot_var)

LET/TITLE="($ferret_title_0)" yvar = XSEQUENCE(($ferret_plot_var_1))

! Is it a varible on the E axis of a DSG file?

DEFINE SYMBOL vshape = `($ferret_plot_var_1),RETURN=shape`
IF `($vshape"0|E>1|*>0)` THEN

! Is there a rowsize variable?

   IF `IS_ELEMENT_OF_STR_N(vnames, "rowsize") EQ 0` THEN
      MESSAGE/ERROR **ERROR Expecting a RowSize variable in the file, not found
      EXIT/PROGRAM
   ENDIF

! Expand trajectory variable into obs axis
   DEFINE SYMBOL vtype = 0
   DEFINE SYMBOL vtype = `yvar,RETURN=dtype`
   DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0`)

   IF ($is_string"0|*>1") THEN 
      LET yvar = EXPND_BY_LEN_STR(($ferret_plot_var_1), rowsize,`rowsize[m=@sum]`)
      IF ($its_prop_plot"0|*>1") THEN  ! cannot use a string as plot argument
	 LET mvar_1 = _m[ge=($ferret_plot_var_1)]
	 LET zvar = EXPND_BY_LEN(mvar_1, rowsize,`rowsize[m=@sum]`)
      ENDIF
   ELSE
      LET yvar = EXPND_BY_LEN(($ferret_plot_var_1), rowsize,`rowsize[m=@sum]`)
   ENDIF
ENDIF

IF `($data_count"0") GE 3` THEN ! color by 3rd variable

   ! Initialize the 3rd variable.
   ! In fact the region and dataset will be the
   ! same as for var 0 (for now anyway)

   GO LAS_initialize_region 2
   GO LAS_initialize_data 2
   
   IF ($error_status"0|*>1") THEN
     MESSAGE/ERROR **ERROR ($error_string)
     EXIT/PROGRAM
   ENDIF
   
   ! Here is variable 2 title 
   DEFINE SYMBOL ferret_title_2 = ($ferret_plot_title"($data_2_var)")
   DEFINE SYMBOL ferret_plot_var_2 = ($ferret_plot_var)
   IF ($do_curvi_xy"0|0|*>1") THEN DEFINE SYMBOL ferret_plot_var_2 = ($ferret_plot_base_var)
   IF ($do_curvi_xy"0|0|*>1") THEN DEFINE SYMBOL ferret_plot_var = ($ferret_plot_base_var)

   LET/TITLE="($ferret_title_2)" zvar = XSEQUENCE(($ferret_plot_var_2))
   
! Is it a varible on the E axis of a DSG file?

   DEFINE SYMBOL vshape = `($ferret_plot_var_2),RETURN=shape`
   IF `($vshape"0|E>1|*>0)` THEN

! Is there a rowsize variable?

      IF `IS_ELEMENT_OF_STR_N(vnames, "rowsize") EQ 0` THEN
         MESSAGE/ERROR **ERROR Expecting a RowSize variable in the file, not found
         EXIT/PROGRAM
      ENDIF

! Expand trajectory variable into obs axis
      DEFINE SYMBOL vtype = 0
      DEFINE SYMBOL vtype = `zvar,RETURN=dtype`
      DEFINE SYMBOL is_string = ($vtype"0|CHAR>1|*>0`)

      IF ($is_string"0|*>1") THEN 
         LET zvar = EXPND_BY_LEN_STR(($ferret_plot_var_2), rowsize,`rowsize[m=@sum]`)
	 IF ($its_prop_plot"0|*>1") THEN  ! cannot use a string as plot argument
	    LET mvar_2 = _m[ge=($ferret_plot_var_2)]
	    LET zvar = EXPND_BY_LEN(mvar_2, rowsize,`rowsize[m=@sum]`)
	 ENDIF
      ELSE
         LET zvar = EXPND_BY_LEN(($ferret_plot_var_2), rowsize,`rowsize[m=@sum]`)
      ENDIF
   ENDIF

   DEFINE SYMBOL zvar = zvar
   DEFINE SYMBOL color_by = 1

   IF ($ferret_($data_2_var)_palette"0|*>1") THEN \
    DEFINE SYMBOL ferret_palette = ($ferret_($data_2_var)_palette)

   IF ($ferret_($data_2_var)_fill_levels"0|*>1") THEN \
    DEFINE SYMBOL color_by_levels = ($ferret_($data_2_var)_fill_levels)

ENDIF

! Define the label with title and units to be used in the annotations.
can sym variable_lab
IF `STRINDEX("($variable_lab%0%)", "vs") EQ 0` THEN 
   DEFINE SYMBOL variable_lab = ($variable_1_lab) vs ($variable_0_lab)
   LET variable_0_lab = STRCAT(data_0_title, data_0_units)
   LET variable_1_lab = STRCAT(data_1_title, data_1_units)
   LET variable_lab_A = STRCAT(variable_1_lab, " vs ")
   LET variable_lab_B = STRCAT(variable_lab_A, variable_0_lab)
   LET variable_lab = STRCAT(variable_lab_A, variable_0_lab)
   DEFINE SYMBOL variable_lab_var = 1
ENDIF

IF  ($color_by"0") THEN 
   IF ($data_2_var"0|time>1|*>0") THEN  DEFINE SYMBOL ferret_plot_key = date_key 

   IF `STRINDEX("($variable_lab%0%)", "colored") EQ 0` THEN 
      LET variable_2_lab = STRCAT(data_2_title, data_2_units)
      DEFINE SYMBOL variable_lab = ($variable_lab) colored by ($ferret_title_2)
      DEFINE SYMBOL variable_lab_var = 1
      LET variable_lab_C = STRCAT (variable_lab_B, " colored by ")
      LET variable_lab = STRCAT (variable_lab_C, variable_2_lab)
   ENDIF
ENDIF

! Special color-by-time key
IF ($ferret_plot_key"0|date_key>1|*>0") THEN 

! In this case we set up a time axis, and label the color key with dates
! If the units are seconds since, we don't need that much resolution for this. Make it hours.

   LET tmin = ($data_var)[i=@MIN]
   LET tmax = ($data_var)[i=@MAX]

   LET since_loc = STRINDEX("`($data_t_var).units`","since") - 2
   IF `since_loc GT 1` THEN 
      LET tunits = SUBSTRING("`($data_t_var).units`",1,`since_loc`)
      DEFINE SYMBOL tunits = `tunits`
   ENDIF
   DEFINE AXIS/T=`tmin`:`tmax`:1/T0="`($data_t_var).time_origin`"/units=($tunits) time_axis 
   IF ($tunits"0|seconds>1|*>0") THEN \
   DEFINE AXIS/T=`tmin`:`tmax`:3600/T0="`($data_t_var).time_origin`"/units=($tunits) time_axis 
   DEFINE SYMBOL datekey = 1

   DEFINE SYMBOL ferret_key_annotate = 0

   LET ttvar = t[gt=time_axis]
   DEFINE SYMBOL datekey_time_arg = ttvar

   DEFINE SYMBOL ferret_plot_levels = 30
   DEFINE SYMBOL ferret_fill_levels = 30

ENDIF


DEFINE SYMBOL xvar = xvar
DEFINE SYMBOL yvar = yvar

! Apply any constraints

! Initialize mask variables

LET var_mask = 1+0*x[gx=xvar,i=1:`nx_var`]

IF `($subset_mask"0|*>1") EQ 0` THEN LET subset_mask = 1
LET text_mask = 1
LET ntext_masks = 0

IF ($constraint_0_lhs"0|*>1) THEN
   GO prop_prop_constraints
ENDIF

!LET constraints_mask = text_mask[gx=time@asn] * var_mask[gx=time@asn] * feature_mask_obs[gx=time@asn]

LET constraints_mask = text_mask * XSEQUENCE(var_mask[($region_full)])
IF ($have_feature_mask"0|*>1") THEN LET constraints_mask = text_mask * XSEQUENCE(var_mask[($region_full)]) * feature_mask_obs

IF ($color_by"0|*>1") THEN 

   DEFINE SYMBOL zvar = constraints_mask*zvar
   DEFINE SYMBOL color_by_title = `zvar,RETURN=title`

   DEFINE SYMBOL plot_arg = ($xvar), ($yvar), ($zvar)

ENDIF  ! color-by 3rd var

DEFINE SYMBOL xvar = XSEQUENCE(constraints_mask)*xvar
DEFINE SYMBOL yvar = XSEQUENCE(constraints_mask)*yvar


! End of  ------------- setup_prop_prop.jnl--------------------------

