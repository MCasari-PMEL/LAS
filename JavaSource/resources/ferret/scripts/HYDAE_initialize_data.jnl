!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! HYDAE_initialize_data.jnl
! $Revision:$
! 
! $Author:$
! $Date:$

GO LAS_initialize_dataset ($1"0")

! Define the plot variable. For comparison plots, we want to save the dataset number
! for each dataset.

DEFINE SYMBOL data_num = `($data_var),return=dsetnum`
DEFINE SYMBOL data_($num)_num = `($data_var),return=dsetnum`

DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),($region_full)]

! BEGIN HYCOM initialization section ------------

! NOTE:  For Hybrid Z datasets we must open the 'layer thickness' data and
! NOTE:  create ferret_plot_var by using ZAXREPLACE_ZLEV.  The exception is
! NOTE:  when we're doing section plots -- then the user may choose to do a
! NOTE:  3-arg plot to see the native coordinates.

SET DATA "($ferret_thk_url)"

DEFINE SYMBOL thk_num = `($ferret_thk_var),return=dsetnum`

IF ($error_status"0|*>1") THEN
  MESSAGE/ERROR "**ERROR Layer Thickness dataset not opened"
  EXIT/PROGRAM
ENDIF

SET DATA ($data_num)  ! for convenience, default dataset has the data variable.

! Interface gives a choice of native Z coordinates only for XZ, YZ (or ZT?) 
! views otherwise use hybrid Z regridding.

DEFINE SYMBOL native_Z_plot = 0
IF ($constraint_0_lhs"0|Native_Z_section>1|*>0") THEN \
  DEFINE SYMBOL native_Z_plot ($constraint_0_rhs"0|yes>1|no>0|*>0")

IF ($native_Z_plot"0") THEN DEFINE SYMBOL native_Z_plot ($ferret_view"|xz>1|yz>1|zt>1|*>0")
! IF ($native_Z_plot"0") THEN DEFINE SYMBOL native_Z_plot ($ferret_view"|xz>1|yz>1|*>0")

! NOTE:  Hardcoded depths appropriate only for HYCOM!
DEFINE axis/z/depth/units=`($ferret_thk_var)[d=($thk_num)],return=units`/bounds fixed_z_axis = \ 
     {0.,2., 5, 10.,20.,30.,50.,75.,100.,150.,200.,300.,400.,600.,800.,1000.,1200.,1500.,2000.,3000.,4000.,6000.,8000.},\
     {0.,1.,3.5,7.5,15.,25.,40.,62., 88.,125.,175.,250.,350.,500.,700., 900.,1100.,1350.,1750.,2500.,3500.,5000.,7000.,8000.}

! END Hybrid Z initialization section --------------

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
! TODO:  From here to the end probably won't work with the regridded
! TODO:  variable I've already created.

! Get any DEFINE VARIABLE analysis definitions
! This renames the data variable, and so redefines the symbol data_var
! and sets up the analysis: e.g. ,z=0:2000@ave

IF ($data_0_analysis_label"0|*>1") THEN 
   GO LAS_analysis
   DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),($region_full)($data_analysis_expr)]
   DEFINE SYMBOL ferret_plot_var = ($data_var)[d=($data_num),($region_full)($data_analysis_expr)]
   IF ($data_0_analysis_oceanmask"0|*>1") THEN 
     LET/d=($data_num) plot_var =  ($data_var)[d=($data_num)] * analysis_mask
     DEFINE SYMBOL ferret_plot_var = plot_var[($region_full)($data_analysis_expr)]
   ENDIF
ENDIF

! Needed for transform_seasonal, save variable definition without any
! time-region information that may be added.

DEFINE SYMBOL ferret_xyz_var = ($data_var)[d=($data_num),($region_xyz)]

! Apply the expression in ferret_expression. $ represents the variable.

! Check if we are working with the second of two variables in comparison mode
IF ($variables_initialized"0|*>1") THEN
   IF ($ferret_expression2"0|*>1") THEN DEFINE SYMBOL ferret_expression ($ferret_expression2)
ENDIF

! The side by side plots pretend that the second plot is plot 1, so 
IF `STRCMP("($operation_service_action)", "Side2") EQ 0` THEN
   IF ($ferret_expression2"0|*>1") THEN DEFINE SYMBOL ferret_expression ($ferret_expression2)
ENDIF

IF ($ferret_expression"0|*>1") THEN GO LAS_expression

! Apply any transforms that may have been specified.

GO LAS_transforms

! Keep track of variables initialized, to tell us if next time we
! want ferret_expression or ferret_expression2

DEFINE SYMBOL variables_initialized `1 + ($variables_initialized"0")`

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

! End of HYDAE_initialize_data.jnl  ------------------------------------------------------


