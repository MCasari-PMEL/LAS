! transform_curvi_xy.jnl
! 
! 18-Apr-2007 extracted from LAS_transforms.jnl
! Set up for curvilinear XY data: curvilinear-to-rectilinear regridding
! or native curvilinear xy plots or sample from curvilinear coordinates.

DEFINE SYMBOL which_var ($num)

IF `($constraint_0_lhs"0|Curv_to_Rect_Regridding>1|*>0")` THEN 
   DEFINE SYMBOL data_var_transform = , Regridded Curvilinear to Rectilinear ($constraint_0_rhs)-degree Grid,
      DEFINE SYMBOL data_dup_varname ($data_var)_regrid

ELIF  `STRINDEX("($ferret_view)", "xy") EQ 0` THEN
   IF ($ferret_interpolate_data%0|false>0|true>1|1|0|*>1%) THEN 
      DEFINE SYMBOL data_var_transform = , Interpolated from Curvilinear coordinates
      DEFINE SYMBOL data_dup_varname ($data_var)_sample
   ENDIF

ELSE
   IF ($ferret_interpolate_data%0|false>0|true>1|1|0|*>1%) THEN \
      DEFINE SYMBOL data_var_transform = , Interpolated from Curvilinear coordinates
ENDIF

! Check the regions in x and y. The Sampling schemes work best if they
! dont have to do moduloing; reset x regions to try to match the longitude
! coordinate variable, and call the initialize_region script again.

! For large datasets, we might pre-set these in the initialization script. 
! Compute them only if undefined

IF `($ferret_curv_lon_min"1|*>0")` THEN \
   DEFINE SYMBOL ferret_curv_lon_min = `($ferret_curvi_coord_lon)[d=($data_num),x=@min,y=@min]`
IF `($ferret_curv_lon_max"1|*>0")` THEN \
   DEFINE SYMBOL ferret_curv_lon_max = `($ferret_curvi_coord_lon)[d=($data_num),x=@max,y=@max]`

! e.g. tripolar grid where the range is 0 to 426 messes up the calculations...

IF `($ferret_curv_lon_max)- ($ferret_curv_lon_min) GT 360` THEN DEFINE SYMBOL ferret_curv_lon_max `($ferret_curv_lon_min) + 360`

IF `($region_x_lo) LT ($ferret_curv_lon_min)` THEN 
   DEFINE SYMBOL region_0_x_lo `($region_0_x_lo) + 360`
   DEFINE SYMBOL region_0_x_hi `($region_0_x_hi) + 360`
   GO LAS_initialize_region ($num)
ENDIF
IF `($region_x_hi) GT ($ferret_curv_lon_max)` THEN 
   DEFINE SYMBOL region_0_x_lo `($region_0_x_lo) - 360`
   DEFINE SYMBOL region_0_x_hi `($region_0_x_hi) - 360`

   GO LAS_initialize_region ($num)

   IF `($region_x_lo) LT ($ferret_curv_lon_min)` THEN  ! still crosses branch cut
      DEFINE SYMBOL two_slices 1  ! will need to use all xcoords (get_curv_coord_box)
   ENDIF
ENDIF

! curvilinear to rectilinear regridding

IF `($constraint_0_lhs"0|Curv_to_Rect_Regridding>1|*>0")` THEN
   IF ($region_t"0|*>1") THEN DEFINE SYMBOL reg_zt ($region_t)
   IF ($region_z"0|*>1") THEN DEFINE SYMBOL reg_zt ($region_z)
   IF ($region_zt"0|*>1") THEN DEFINE SYMBOL reg_zt ($region_zt)
   IF ($region_($which_var)_zt"0|*>1") THEN DEFINE SYMBOL reg_zt ($region_($which_var)_zt)
   
   GO transform_curv_to_rect.jnl

ELSE


!!!!!!!!!!!

! Special setup, if a latitude has been specified such that the grid
! is linear south of ($ferret_linear_lat_max)

! Here we check whether the region is within the part of the grid that is rectilinear.
! If it is, then redefine the axes and proceed as if it is a rectilinear grid. Otherwise
! call LAS_set_strides_curvilinear.jnl


! If this is a vector plot, do this only once, on the first vector component

DEFINE SYMBOL check_linear = 1
IF ` ($operation_ID"0|Plot_vector>1|*>0") AND ($num) GT 0` THEN DEFINE SYMBOL check_linear = 0

IF `($ferret_linear_coords_file"0|*>1") AND ($check_linear)` THEN

   IF `($ferret_linear_lat_max"0|*>1") AND (($region_y_hi"0")  LT ($ferret_linear_lat_max))` THEN 
   
! If we have a precomputed set of new axes, and if we are in the linear portion of
! the grid, then redefine the axes.
      SET DATA "($ferret_linear_coords_file)"
      CANCEL DATA "($ferret_linear_coords_file)"

      DEFINE AXIS/UNITS=degrees/modulo `($data_var),RETURN=xaxis` = x[gx=HYCOM_lon_axis]
      DEFINE AXIS/UNITS=degrees `($data_var),RETURN=yaxis` = y[gy=HYCOM_lat_axis]

! Now we no longer need to deal with this data as being on a curvilinear grid

      CANCEL SYMBOL ferret_curvi_coord_lon
      CANCEL SYMBOL ferret_curvi_coord_lat
      CANCEL SYMBOL DEFINE SYMBOL do_curvi_xy = 0
      CANCEL SYMBOL do_curvi_xy_and_hybrid_z = 0
   
      ! Because we have redefined the axes we cant set native strides
      DEFINE SYMBOL no_native_strides_xy = 1

   
   ELSE
      GO LAS_set_strides_curvilinear.jnl
   ENDIF

ELSE

   GO LAS_set_strides_curvilinear.jnl

ENDIF

!!!!!!!!!!!

IF `($ferret_curvi_coord_lon"0|*>1") EQ 0` THEN EXIT/SCRIPT


! Set up native curvilinear plots
   LET/TITLE="Longitude"/units=degrees xcoord = ($ferret_curvi_coord_lon)[d=($data_num)]
   LET/TITLE="Latitude"/units=degrees  ycoord = ($ferret_curvi_coord_lat)[d=($data_num)]

!   Native plot in XY

   IF ($ferret_view"|xy>1|*>0") THEN

     IF `($constraint_0_lhs"1|Curv_to_Rect_Regridding>0|*>1")` THEN  ! Do this setup if NOT curv-to-rect regridding
        DEFINE SYMBOL native_curvilinear_xy = 1

        ! Get the range of I,J needed to grab the region. Use it to define the plot or output variable.
        
        GO get_curv_coord_bbox

        ! Remove this  and uncomment the above to set index range by region
!c        DEFINE SYMBOl clon_imin = 1
!c        DEFINE SYMBOl clon_imax = `($ferret_curvi_coord_lon)[d=($data_num),j=1,x=@ngd]`
!c        DEFINE SYMBOl clat_jmin = 1
!c        DEFINE SYMBOl clat_jmax = `($ferret_curvi_coord_lon)[d=($data_num),i=1,y=@ngd]`
        
        LET/TITLE="Longitude"/units=degrees xcoord = \
          ($ferret_curvi_coord_lon)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
        LET/TITLE="Latitude"/units=degrees  ycoord = \ 
          ($ferret_curvi_coord_lat)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]

        LET/d=($data_num) plot_var = ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
        IF ($region_zt"0|*>1") THEN LET/d=($data_num) plot_var = \
        ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)]
        IF ($region_($which_var)_zt"0|*>1") THEN LET/d=($data_num) plot_var = \
        ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_($which_var)_zt)]

        DEFINE SYMBOL ferret_plot_base_var = \ ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax)]
        IF ($region_zt"0|*>1") THEN DEFINE SYMBOL ferret_plot_base_var = \
        ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_zt)]
        IF ($region_($which_var)_zt"0|*>1") THEN DEFINE SYMBOL ferret_plot_base_var = \
        ($data_var)[d=($data_num),i=($clon_imin):($clon_imax),j=($clat_jmin):($clat_jmax),($region_($which_var)_zt)]

        DEFINE SYMBOL ferret_plot_base_var_($which_var) ($ferret_plot_base_var)

        DEFINE SYMBOL ferret_plot_var ($expr1)plot_var[d=($data_num)]($expr2), xcoord, ycoord
        IF ($region_zt"0|*>1") THEN DEFINE SYMBOL ferret_plot_var ($expr1)plot_var[d=($data_num)]($expr2), xcoord, ycoord
        DEFINE SYMBOL ferret_plot_title "($expr1)($data_title)($expr2) ($data_units) Native Curvilinear Plot"

        IF ($expr3"0|*>1") THEN
           DEFINE SYMBOL ferret_plot_var ($expr1)plot_var[d=($data_num)]($expr3)plot_var[d=($data_num)]($expr4), xcoord, ycoord
           IF ($region_zt"0|*>1") THEN DEFINE SYMBOL ferret_plot_var \
             ($expr1)plot_var[d=($data_num)]($expr3)plot_var[d=($data_num)]($expr4), xcoord, ycoord
           DEFINE SYMBOL ferret_plot_title "($expr1)($data_title)($expr3)($data_title)($expr4) ($data_units) Native Curvilinear Plot"
        ENDIF

! If not striding for region, then always use these, and comment out the commands just below.
        IF ($region_x_lo"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals \   
          ($ferret_curvi_quals)/HLIM=($region_x_lo):($region_x_hi)
        IF ($region_y_lo"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals \   
          ($ferret_curvi_quals)/VLIM=($region_y_lo):($region_y_hi)

!cc        IF ($region_z"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals  \   
!cc          ($ferret_curvi_quals)/($region_z)
!cc        IF ($region_t"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals  \   
!cc          ($ferret_curvi_quals)/($region_t)
        CANCEL SYMBOL ferret_use_graticule

        IF ($ferret_lon_modulo"1|1|0|yes>1|no>0|*>0") THEN 
           IF ($region_x_lo"0|*>1") THEN DEFINE SYMBOL ferret_curvi_quals \   
             ($ferret_curvi_quals)/HLIM=($region_x_lo):($region_x_hi)
! A bug in FILL/MODULO for curvilinear data makes the plot fail for some data
!        IF ($ferret_lon_modulo"1|1|0|yes>1|no>0|*>0") THEN 
!           DEFINE SYMBOL ferret_curvi_quals ($ferret_curvi_quals)/MODULO
        ENDIF

     ENDIF  ! setup for NOT curv-to-rect regridding

! Or set up for native slices: Sample in the X and Y directions of the slice

   ELIF `STRLEN ("($ferret_view)") LE 2` THEN

     IF ($ferret_interpolate_data%0|false>0|true>1|1|0|*>1%) THEN 
        GO curvi_sample_slice.jnl
        DEFINE SYMBOL data_var_transform = , Interpolated from Curvilinear coordinates
     ELSE
        GO curvi_nrst_slice.jnl
     ENDIF

   ENDIF

ENDIF  ! native curvilinear plots or slices.

! End of $RCSfile ------------transform_curvi_xy.jnl-------------------------------
