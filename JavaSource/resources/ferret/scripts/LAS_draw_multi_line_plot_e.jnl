! LAS_draw_multi_line_plot_e.jnl
!  Do a multi-line 1-D plot for an ensemble dataset. 
! Author: Ansley Manke
! Date: 03/03/2014 
!  4/06/13 Input is an averaged variable. Plot it with
!          all of the member variables as colored lines.

set mode ver:always


CANCEL MODE GRATICULE
DEFINE SYMBOL qualifiers_0 = /VGRATICULE=DASH,COLOR=($graticuleColor))
IF `($ferret_use_graticules"1|none>0|*>1) EQ 0` THEN CANCEL SYMBOL qualifiers_0

! Initialize datasets beyond the first one. Keep
! titles for the plot legend and units for labeling 
! the plot axes.

IF `($data_count"0") GT 6` THEN 
   DEFINE SYMBOL data_count = 6
   DEFINE SYMBOL reset_count = 1
ENDIF

LET attlist = ($data_0_var).attnames

IF `IS_ELEMENT_OF_STR_N(attlist, "definition") EQ 0` THEN
     MESSAGE/ERROR **ERROR Cannot find definition attribute for ($data_0_var) LAS_draw_multi_line_z_plot_e.jnl
     EXIT/PROGRAM
ENDIF

DEFINE SYMBOL ave_def = `($data_0_var).definition`
LET bracket = STRINDEX("($ave_def)", "[")
DEFINE SYMBOL evariable = `SUBSTRING("($ave_def)", 1, bracket-1)`
SHOW SYMBOL evariable
LET ecount = `($evariable),RETURN=msize`

REPEAT/RANGE=1:`ecount`/NAME=q (\
   DEFINE SYMBOL data_($data_count)_var = ($evariable)[d=($dset($num)),($region_full),M=($data_count)]; \
   DEFINE SYMBOL data_($data_count)_units = `($evariable),RETURN=units`; \
   DEFINE SYMBOL data_count = `($data_count)+1` ; \
   )

! Is this an ensemble dataset with a variable containing the ensemble lables?
IF `($data_count"0") GT 0` THEN
   DEFINE SYMBOL itsa_multi_lineplot = 1
   DEFINE SYMBOL eaxis = (`($data_1_var),return=eaxis`)
   LET labels_var =  _m[m=($data_1_var)]

   LET eattnames = ($eaxis).attnames
   IF `IS_ELEMENT_OF_STR(eattnames, "_CoordinateAxisType") GT 0 ` THEN 
      LET axtype = "`($eaxis)._CoordinateAxisType`"
      LET is_ensemble = `STRCMP(axtype, "Ensemble") EQ 0`
      IF `is_ensemble` THEN 
         LET labels_var = labels
	 DEFINE SYMBOL ferret_title_0 = Mean
      ENDIF
   ENDIF
ENDIF

! Use Ferret properties to set up the plot qualifiers
GO LAS_set_plot_qualifiers

REPEAT/range=1:`($data_count"0")-1`/NAME=qq (  \
  DEFINE SYMBOL qq = `qq`; \
  IF `is_ensemble` THEN DEFINE SYMBOL enslab = `labels_var[e=($qq)]`; \
  DEFINE SYMBOL ferret_plot_var = ($data_($qq)_var); \
  DEFINE SYMBOL plot_arg = ($plot_arg),($ferret_plot_var); \
  DEFINE SYMBOL ferret_plot_var_($qq) = ($ferret_plot_var); \ 
  IF `is_ensemble` THEN DEFINE SYMBOL ferret_title_($qq) = ($enslab); \ 
  LET tlen = STRLEN("($ferret_title_($qq))"); \
  LET title_len = `MAX(tlen, title_len)`; \
  DEFINE SYMBOL units_($qq) = `UPCASE("($data_($qq)_units)")`; \
   )

! If default graticules setting, put graticules on both axes.
IF `($qualifiers_0"0|*>1")` THEN 
   CANCEL SYMBOL qualifiers_0
   SET MODE GRATICULE:(DASH,COLOR=($graticuleColor))
ENDIF

! SET WIN/ASP=0.6
! SET VIEW full

GO LAS_open_window

LET margin_del = 0.08
PPL AXLSZE,,0.08
PPL AXNSIG,,2

LET save_count = ($data_count)
PLOT($qualifiers)($qualifiers_0)/NOKEY/SET ($plot_arg)
   IF `($ferret_dep_axis_scale"0|*>1")` THEN PPL YAXIS ($ferret_dep_axis_scale)
   ppl txlsze,0.07
   PPL xlab
   PPL ylab ($data_0_units)
   DEFINE SYMBOL data_count = 1  ! just so the region labels script will work
   GO reset_labels
PPL PLOT

DEFINE SYMBOL data_count = `save_count`

! Make the first line thick
LET thicker = 2
PLOT/OVER/NOLAB/THICK=`thicker`/COLOR=BLACK/LINE ($ferret_plot_var_0)

IF ($labnum_calend%0|*>1%) THEN
   DEFINE SYMBOL n_left_labels = `($n_left_labels"0") + 1`
   DEFINE SYMBOL upper_left_($n_left_labels) = ($lab($labnum_calend))
   DEFINE SYMBOL calendar_lab = ($upper_left_($n_left_labels"0"))
ENDIF

DEFINE SYMBOL ax_vert_save = ($ax_vert"D")
DEFINE SYMBOL ax_horiz_save = ($ax_horiz"D")
DEFINE SYMBOL xax_min_save = ($xaxis_min)
DEFINE SYMBOL xax_max_save = ($xaxis_max)

! Draw the legend.

! Make an invisible xy plot. The legline script doesnt work well with z and t plots.

DEFINE VIEWPORT/x=0:1/y=0:1/axes overview

SET VIEW overview
PLOT/NOYADJUST/NOLAB/NOAX/I=1:2/VLIM=100:102 i

LET titlesiz = 0.09

! The start (x,y) position for each line drawn on the key

!LET x1 = -0.2
!LET xkey = {`x1` , `x1` , `x1` , `0.6*($ppl$xlen)`, `0.6*($ppl$xlen)`, `0.6*($ppl$xlen)`,     0, 0}

!LET ykey = {-0.65, -0.85, -1.05,            -0.65,             -0.85,             -1.05, -1.25, -1.25}
!IF `($data_count) EQ 2` THEN LET ykey = \
!           {-0.7,  -0.9,  -1.05,            -0.65,             -0.85,             -1.05, -1.25, -1.25}


LET x1 = 1.
LET xkey = {`x1` , `x1` , `x1` , `0.6*($ppl$xlen)`, `0.6*($ppl$xlen)`, `0.6*($ppl$xlen)`,     0, 0}

LET ykey = {0.7, 0.5, 0.3, 0.7, 0.5, 0.3, 0.1, 0.1}
!IF `($data_count) EQ 2` THEN LET ykey = \
!           {-0.7,  -0.9,  -1.05,            -0.65,             -0.85,             -1.05, -1.25, -1.25}

DEFINE SYMBOL thicksave = ($thicknum)
DEFINE SYMBOL thicknum = 2
DEFINE SYMBOL legend_qual = /LINE

REPEAT/range=1:`($data_count)`/NAME=q (; \
   DEFINE SYMBOL q = `q`; \
   DEFINE SYMBOL lnum = `q-1`; \
   LET xpos = xkey[i=($q)]; LET ypos = ykey[i=($q)]; \
   GO LAS_legend_line \
   `xpos-0.2` 0.3 `ypos` `q + ($nlinecolors)*($thicknum)` `titlesiz` "($ferret_title_($lnum))" ($legend_qual); \
   DEFINE SYMBOL thicknum = ($thicksave); \
   )

! The results script needs the actual axis directions. Restore them.

DEFINE SYMBOL ax_vert = ($ax_vert_save)
IF ($ax_vert"|D>1|*>0") THEN CANCEL SYMBOL ax_vert
DEFINE SYMBOL ax_horiz = ($ax_horiz_save)
IF ($ax_horiz"|D>1|*>0") THEN CANCEL SYMBOL ax_horiz

DEFINE SYMBOL xaxis_min = ($xax_min_save)
DEFINE SYMBOL xaxis_max = ($xax_max_save)

! --------------- End of LAS_draw_multi_line_plot_e  ---------------------------

