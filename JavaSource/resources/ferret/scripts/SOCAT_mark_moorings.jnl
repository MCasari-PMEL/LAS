! SOCAT_mark_moorings.jnl
! Draw the last of each mooring expocode as a symbol, so moorings will show up.
! The -1 makes it the second-from-last point which seems to be missing less often.
! Ideally we'd plot the last valid point in each mooring if an efficient way can be
! found to do that


IF `($ferret_is_socat"0") EQ 0` THEN EXIT/SCRIPT

LET end_of_traj = xsequence(rowsize[m=@iin])
LET/units=degrees_east lonend = SAMPLEI (longitude, end_of_traj)
LET/units=degrees_north latend = SAMPLEI (latitude, end_of_traj)

LET varnames = ..varnames
IF `IS_ELEMENT_OF_STR(varnames, "vessel_name") GT 0` THEN
   LET mooring_mask = STRINDEX(vessel_name, "Mooring") gt 0

   LET/units=degrees_east lonend = XSEQUENCE(mooring_mask)* SAMPLEI (longitude, end_of_traj)
   LET/units=degrees_north latend = XSEQUENCE(mooring_mask)* SAMPLEI (latitude, end_of_traj)
ENDIF

LET varend = SAMPLEI (($mark_end), end_of_traj) 
IF ($mark_end_m"0") THEN LET varend = ($mark_end)

LET have_moor = 1
IF `IS_ELEMENT_OF_STR(varnames, "vessel_name") GT 0` THEN LET have_moor =  `mooring_mask[M=@sum] GT 0`

IF `have_moor` THEN
   DEFINE SYMBOL qual_over = /NOLAB/NOKEY/LEVELS/THICK=2
   IF ($ferret_palette"0|*>1") THEN DEFINE SYMBOL qual_over = \
    ($qual_over)/PALETTE=($ferret_palette"rainbow|default>rainbow|*>*)
   IF `($ferret_fill_levels"0|*>1") EQ 0` THEN DEFINE SYMBOL qual_over = ($qual_over)/LEVEL=($lev_opnlevs)
   PLOT/VS/OVER/RIBBON/SYM=17/siz=0.02($qual_over)/missing=black  lonend, latend, varend
   
SAY _________________ Draw end point of `mooring_mask[M=@sum]` moorings

!---------------- end of SOCAT_mark_moorings.jnl -------------------------
