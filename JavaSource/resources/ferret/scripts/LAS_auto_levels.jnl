! LAS_auto_levels.jnl
! ACM 8/22/2007

! Based on a variables value over its entire range, set strides
! if needed to quickly get stats on the variable. Use this to set levels.

! Argument: the variable to use in setting the levels.

! The symbol ferret_center_levels, if set to 1, forces the levels
! to be 2 std above and below zero. Otherwise use 2 std above 
! and below the data mean

! This script should be done BEFORE any other striding is done.
! It operates on the variable on its entire native unstrided grid.

! Determine striding for speed in operating the STAT command
LET memsize = 0.5* 1.e6

LET pvar = ($data_var)[d=($data_num)]

LET zsiz = `pvar,return=ksize`
IF `zsiz GT 0` THEN LET pvar = ($data_var)[d=($data_num),($region_z)]

LET var_size =  `pvar,RETURN=size`
LET stride_for_speed = `INT( 1+ (var_size/memsize) )`

IF `stride_for_speed GT 1` THEN

   IF `($region_x_range"0") GT 0` THEN \
     SET AXIS/STRIDE=`stride_for_speed` `pvar,RETURN=xaxis`

   IF `($region_y_range"0") GT 0` THEN \
     SET AXIS/STRIDE=`stride_for_speed` `pvar,RETURN=yaxis`

   IF `($region_z_range"0") GT 0` THEN \
     SET AXIS/STRIDE=`stride_for_speed` `pvar,RETURN=zaxis`

   IF `($region_t_range"0") GT 0` THEN   \
     SET AXIS/STRIDE=`stride_for_speed` `pvar,RETURN=taxis`

ENDIF

! Execute the stat command to load symbols with the variables
! mean, max, min, std.

STAT pvar

! Undo the striding. Other striding may be set later

IF `stride_for_speed GT 1` THEN
   IF `($region_x_range"0") GT 0` THEN CANCEL AXIS/STRIDE `pvar,RETURN=xaxis`
   IF `($region_y_range"0") GT 0` THEN CANCEL AXIS/STRIDE `pvar,RETURN=yaxis`
   IF `($region_z_range"0") GT 0` THEN CANCEL AXIS/STRIDE `pvar,RETURN=zaxis`
   IF `($region_t_range"0") GT 0` THEN CANCEL AXIS/STRIDE `pvar,RETURN=taxis`
ENDIF

! Compute rounded-off levels with the PPL %RANGE command.

IF ($ferret_center_levels"0|1|TRUE>1|*>0") THEN
   PPL %RANGE `-2*($stat_std)`, `+2*($stat_std)`, ($ferret_num_contour_levels"50")
ELSE
   PPL %RANGE `($stat_mean)-2*($stat_std)`, `($stat_mean)+2*($stat_std)`, 50
ENDIF

DEFINE SYMBOL ferret_auto_levels_simple = (-inf)(($ppl$range_low),($ppl$range_high),($ppl$range_inc))(inf) 

!!!  Suggestions from Hankin
! Determine contour levels to use such that a fine density of levels is used within +/- 1 std dev
! and a coarse density is used out to +/- 2 std dev.
! The ratio of densities is density_factor = fine/coarse.

LET density_factor = 4
! fraction_that_are_fine = density_factor/(1+density_factor)

DEFINE SYMBOL num_fine_levels = `(density_factor/(1+density_factor)) * ($num_contour_levels"50")`
DEFINE SYMBOL num_coarse_levels =  `($num_contour_levels"50") - ($num_fine_levels)`
DEFINE SYMBOL half_num_coarse_levels = `($num_coarse_levels)/2`

! See if centered levels were requested, either by setting the symbol ferret_center_levels
! or with a contour_levels or fill_levels that is centered.

IF `($ferret_center_levels"0|1|TRUE>1|*>0") EQ 0` THEN
   IF ($ferret_contour_levels"0|*>1") THEN 
      DEFINE SYMBOL ferret_center_levels = `STRINDEX("($ferret_contour_levels)", "C") GT 0`
      DEFINE SYMBOL ferret_center_levels = `STRINDEX("($ferret_contour_levels)", "c") GT 0`
   ENDIF
   IF ($ferret_fill_levels"0|*>1") THEN 
      DEFINE SYMBOL ferret_center_levels = `STRINDEX("($ferret_fill_levels)", "C") GT 0`
      DEFINE SYMBOL ferret_center_levels = `STRINDEX("($ferret_fill_levels)", "c") GT 0`
   ENDIF
ENDIF

! Compute rounded-off levels with the PPL %RANGE command.

IF ($ferret_center_levels"0|1|TRUE>1|*>0") THEN
   PPL %RANGE `-2*($stat_std)`, `+2*($stat_std)`, ($ferret_num_contour_levels"50")
   LET centered_max = MAX(ABS(`($stat_mean)-($stat_std)`), ABS(`($stat_mean)+($stat_std)`) )
   PPL %RANGE `-1*centered_max`, `centered_max`, ($num_fine_levels)
ELSE
   PPL %RANGE `($stat_mean)-($stat_std)`, `($stat_mean)+($stat_std)`, ($num_fine_levels)
ENDIF
pause

DEFINE SYMBOL coarse_delta = `($ppl$range_inc)*density_factor`
DEFINE SYMBOL coarse_lo = `($ppl$range_low) - ($half_num_coarse_levels) * ($coarse_delta)`
DEFINE SYMBOL coarse_hi = `($ppl$range_high) + ($half_num_coarse_levels) * ($coarse_delta)`

DEFINE SYMBOL ferret_auto_levels = (-inf)(($coarse_lo),($ppl$range_low),($coarse_delta))(($ppl$range_low),($ppl$range_high),($ppl$range_inc))(($ppl$range_high),($coarse_hi),($coarse_delta))(inf)

! Use these levels to reset ferret_contour_levels and ferret_fill_levels 

DEFINE SYMBOL ferret_fill_levels = ($ferret_auto_levels)
IF `($ferret_contour_levels"0|*>1") EQ 0` THEN DEFINE SYMBOL ferret_contour_levels = ($ferret_auto_levels)
