/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package gov.noaa.pmel.tmap.las.ui;

import gov.noaa.pmel.tmap.las.jdom.LASConfig;
import gov.noaa.pmel.tmap.las.product.server.LASConfigPlugIn;
import gov.noaa.pmel.tmap.las.util.Category;
import gov.noaa.pmel.tmap.las.util.NameValuePair;
import gov.noaa.pmel.tmap.las.util.Option;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.jdom.JDOMException;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.XML;

/** 
 * MyEclipse Struts
 * Creation date: 03-13-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class getOptions extends Action {
    private static Logger log = LogManager.getLogger(getOptions.class.getName());
    /*
     * Generated Methods
     */

    /** 
     * Method execute
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return ActionForward
     */
    public ActionForward execute(ActionMapping mapping, ActionForm form,
            HttpServletRequest request, HttpServletResponse response) {
        LASConfig lasConfig = (LASConfig)servlet.getServletContext().getAttribute(LASConfigPlugIn.LAS_CONFIG_KEY);
        String opid = request.getParameter("opid");
        String format = request.getParameter("format");

        if ( format == null ) {
            format = "json";
        }
        
        ArrayList<Option> options = new ArrayList<Option>();
        
        try {
            options = lasConfig.getOptions(opid);
        } catch (JDOMException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        
        try {
            PrintWriter respout = response.getWriter();

            if ( format.equals("xml") ) {
                response.setContentType("application/xml");
                respout.print(Util.toXML(options, "options"));
            } else {
                response.setContentType("application/json");
                JSONObject json_response = Util.toJSONarray(options, "options");
                log.debug(json_response.toString(3));
                json_response.write(respout);      
            }

        } catch (JSONException e) {
            // TODO fix
            e.printStackTrace();
        } catch (IOException e) {
            // TODO fix
            e.printStackTrace();
        }
        log.debug("Processing request for options for operation id "+opid+".");
        return null;
    }
    private JSONObject toJSON(ArrayList<Option> options, String string) throws JSONException {
        JSONObject json_response = new JSONObject();
        JSONObject options_object = new JSONObject();
        for (Iterator opIt = options.iterator(); opIt.hasNext();) {
            Option op = (Option) opIt.next();
            JSONObject option = op.toJSON();           
            options_object.array_accumulate("option", option);
        }
        json_response.put("options", options_object);
        return json_response;
    }
}